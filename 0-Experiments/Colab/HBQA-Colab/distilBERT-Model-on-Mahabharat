{"cells":[{"cell_type":"markdown","metadata":{"id":"X4cRE8IbIrIV"},"source":["If you're opening this Notebook on colab, you will probably need to install 🤗 Transformers and 🤗 Datasets. Uncomment the following cell and run it."]},{"cell_type":"code","execution_count":1,"metadata":{"id":"MOsHUjgdIrIW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1689769832698,"user_tz":-330,"elapsed":25126,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"7ba32c35-f65a-43ef-90dd-1daa10860dd5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.12.2)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.22.4)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (23.1)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2022.10.31)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.27.1)\n","Collecting tokenizers!=0.11.3,<0.14,>=0.11.1 (from transformers)\n","  Downloading tokenizers-0.13.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.8/7.8 MB\u001b[0m \u001b[31m61.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting safetensors>=0.3.1 (from transformers)\n","  Downloading safetensors-0.3.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.3/1.3 MB\u001b[0m \u001b[31m26.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.65.0)\n","Requirement already satisfied: pyarrow>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (9.0.0)\n","Collecting dill<0.3.7,>=0.3.0 (from datasets)\n","  Downloading dill-0.3.6-py3-none-any.whl (110 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m110.5/110.5 kB\u001b[0m \u001b[31m9.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (1.5.3)\n","Collecting xxhash (from datasets)\n","  Downloading xxhash-3.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (212 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m212.5/212.5 kB\u001b[0m \u001b[31m18.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting multiprocess (from datasets)\n","  Downloading multiprocess-0.70.14-py310-none-any.whl (134 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.3/134.3 kB\u001b[0m \u001b[31m10.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: fsspec[http]>=2021.11.1 in /usr/local/lib/python3.10/dist-packages (from datasets) (2023.6.0)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.8.4)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub) (4.7.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (23.1.0)\n","Requirement already satisfied: charset-normalizer<4.0,>=2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (2.0.12)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (6.0.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (4.0.2)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.9.2)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.4.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->datasets) (1.3.1)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (1.26.16)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (2023.5.7)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->transformers) (3.4)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas->datasets) (2022.7.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas->datasets) (1.16.0)\n","Installing collected packages: tokenizers, safetensors, xxhash, dill, multiprocess, huggingface_hub, transformers, datasets\n","Successfully installed datasets-2.13.1 dill-0.3.6 huggingface_hub-0.16.4 multiprocess-0.70.14 safetensors-0.3.1 tokenizers-0.13.3 transformers-4.31.0 xxhash-3.2.0\n"]}],"source":["! pip install transformers datasets huggingface_hub"]},{"cell_type":"markdown","metadata":{"id":"ElGR63-yiJIf"},"source":["If you're opening this notebook locally, make sure your environment has an install from the last version of those libraries.\n","\n","To be able to share your model with the community and generate results like the one shown in the picture below via the inference API, there are a few more steps to follow.\n","\n","First you have to store your authentication token from the Hugging Face website (sign up [here](https://huggingface.co/join) if you haven't already!) then uncomment the following cell and input your token."]},{"cell_type":"code","execution_count":2,"metadata":{"id":"ziPwg53XiJIg","executionInfo":{"status":"ok","timestamp":1689765738606,"user_tz":-330,"elapsed":16,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"eacc1aca-ea99-499f-c6b7-7f600cf2c5c1","colab":{"base_uri":"https://localhost:8080/","height":145,"referenced_widgets":["7d1cf3be4f5448e299d6ae8f1585cabb","b6d0d8ff36a64171a28465b6bcff34a8","96b225f0ce7b48309cf1167e3aa86a80","8ec8f9ed3efe4a6ab1e66836ca62231b","5a226cda4d7e497ba94c7ac3bb4c9af3","2738f26d7f4c4904acb7b2c1997e5eb7","5e84654302b944e2b75a18ae9cae1817","79c52a0f14404b8f80b052a8ca3d9c5d","259ee940829e4544a8d1f975aa9427e9","b77fbe87743f40ff84afe72664cd9643","861910a192d54a228fe1f3e54b425410","ac01855fd90f4c93ae99e132441c6b46","56ab1839cc544573bf582e7d62418852","b43d7e22d3b7466b81b61c98c88fc9f7","f1ebf9e74f5d490cb761e6b7578ec5b7","d7d9e5155f8348e89a93faf6e623202b","dbaf9c834a3f4ccb8c451a731c870d90","0c3e474fdfcf442290ee1f10eff207a8","1aa8b0a1a0a54a9d92ee334993f3ed03","ff76c74d75214b50a1dde5b74af76300","632abb46c08842f3b2fcc9302f63468b","bda8c23e5c82448c8a953676b15a2e50","0dfa80b12b724ed9b0eb2ae4600fa120","20747f7e659042f484a3aa4390ccca09","bf99519225c249218a158a5eb85e703f","3867b713ead54a54a52f083893dd970b","6e774bfef2f342119063aab76b222290","c25aac7c1a6243c0b9c6aa9891238d7b","60f5cf0b0fb645b38f35b080c12185dd","f933f89993bc43a498149ed8a33caa1d","ff76229a3a344a26b2956ec404df7663","31455c2480124bbfa726f296cebe3dea"]}},"outputs":[{"output_type":"display_data","data":{"text/plain":["VBox(children=(HTML(value='<center> <img\\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.sv…"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"7d1cf3be4f5448e299d6ae8f1585cabb"}},"metadata":{}}],"source":["from huggingface_hub import notebook_login\n","\n","notebook_login()"]},{"cell_type":"markdown","metadata":{"id":"E0vgESz_iJIg"},"source":["Then you need to install Git-LFS and setup Git if you haven't already. Uncomment the following instructions and adapt with your name and email:"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"FfQYkVb9iJIg","executionInfo":{"status":"ok","timestamp":1689765769296,"user_tz":-330,"elapsed":3719,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"50af7ce5-1ed4-4b72-9b71-bcf4cecd4ecc","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","git-lfs is already the newest version (2.9.2-1).\n","0 upgraded, 0 newly installed, 0 to remove and 15 not upgraded.\n"]}],"source":["!apt install git-lfs\n","!git config --global user.email \"hari.prasad@vedavit-ps.com\"\n","!git config --global user.name \"dasarpai\""]},{"cell_type":"markdown","metadata":{"id":"9LyQseLJiJIh"},"source":["Make sure your version of Transformers is at least 4.16.0 since the functionality was introduced in that version:"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"rWI6Z33siJIh","executionInfo":{"status":"ok","timestamp":1689768051462,"user_tz":-330,"elapsed":893,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"bf826cff-ac76-4c37-c626-d5252e960221","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["4.31.0\n"]}],"source":["import transformers\n","\n","print(transformers.__version__)"]},{"cell_type":"markdown","metadata":{"id":"HFASsisvIrIb"},"source":["You can find a script version of this notebook to fine-tune your model in a distributed fashion using multiple GPUs or TPUs [here](https://github.com/huggingface/transformers/tree/main/examples/tensorflow/question-answering)."]},{"cell_type":"markdown","metadata":{"id":"JhtprnrpiJIi"},"source":["We also quickly upload some telemetry - this tells us which examples and software versions are getting used so we know where to prioritize our maintenance efforts. We don't collect (or care about) any personally identifiable information, but if you'd prefer not to be counted, feel free to skip this step or delete this cell entirely."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yrMFvfLviJIi"},"outputs":[],"source":["from transformers.utils import send_example_telemetry\n","\n","send_example_telemetry(\"question_answering_notebook\", framework=\"tensorflow\")"]},{"cell_type":"markdown","metadata":{"id":"rEJBSTyZIrIb"},"source":["# Fine-tuning a model on a question-answering task"]},{"cell_type":"markdown","metadata":{"id":"XvPZTsbuiJIj"},"source":["In this notebook, we will see how to fine-tune one of the [🤗 Transformers](https://github.com/huggingface/transformers) model to a question answering task, which is the task of extracting the answer to a question from a given context. We will see how to easily load a dataset for these kinds of tasks and use Keras to fine-tune a model on it. Note that this model **does not generate new text!** Instead, it selects a span of the input passage as the answer.\n","\n","![Widget inference representing the QA task](https://github.com/huggingface/notebooks/blob/main/examples/images/question_answering.png?raw=1)"]},{"cell_type":"markdown","metadata":{"id":"4RRkXuteIrIh"},"source":["This notebook is built to run on any question answering task with the same format as SQUAD (version 1 or 2), with any model checkpoint from the [Model Hub](https://huggingface.co/models) as long as that model has a version with a token classification head and a fast tokenizer (check on [this table](https://huggingface.co/transformers/index.html#bigtable) if this is the case). It might, however, need some small adjustments if you decide to use a different dataset than the one used here. Depending on your model and the GPU you are using, you might need to adjust the batch size to avoid out-of-memory errors. Set those three parameters, then the rest of the notebook should run smoothly:"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"zVvslsfMIrIh","executionInfo":{"status":"ok","timestamp":1689768055283,"user_tz":-330,"elapsed":2,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["# This flag is the difference between SQUAD v1 or 2 (if you're using another dataset, it indicates if impossible\n","# answers are allowed or not).\n","# squad_v2 = False\n","model_checkpoint = \"distilbert-base-uncased\"\n","batch_size = 2 #16"]},{"cell_type":"markdown","metadata":{"id":"whPRbBNbIrIl"},"source":["## Loading the dataset"]},{"cell_type":"markdown","metadata":{"id":"W7QYTpxXIrIl"},"source":["We will use the [🤗 Datasets](https://github.com/huggingface/datasets) library to download the data and get the metric we need to use for evaluation (to compare our model to the benchmark). This can be easily done with the functions `load_dataset` and `load_metric`.  "]},{"cell_type":"code","execution_count":4,"metadata":{"id":"IreSlFmlIrIm","executionInfo":{"status":"ok","timestamp":1689768064411,"user_tz":-330,"elapsed":5577,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["from datasets import load_dataset, load_metric\n","from torch.utils.data import Dataset, DataLoader, RandomSampler"]},{"cell_type":"markdown","metadata":{"id":"CKx2zKs5IrIq"},"source":["For our example here, we'll use the [SQUAD dataset](https://rajpurkar.github.io/SQuAD-explorer/). The notebook should work with any question answering dataset in the 🤗 Datasets library. If you're using your own dataset in a JSON or CSV file (see the [Datasets documentation](https://huggingface.co/docs/datasets/loading_datasets.html#from-local-files) on how to load them), it might need some adjustments to the column names."]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"btGDtEw77Cfy","executionInfo":{"status":"ok","timestamp":1689769862383,"user_tz":-330,"elapsed":29691,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"4d74105e-a6ee-4a63-b7ee-f9add0acdfaa"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":510},"id":"s_AY1ATSIrIq","outputId":"4f919f6d-ae73-4658-cba5-66679f302d78","executionInfo":{"status":"ok","timestamp":1689768101078,"user_tz":-330,"elapsed":4250,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-6-88c26ab54a36>:17: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  data.rename(columns={\"Question\":\"question\",\"Answer\":\"answer\",\"Context\":\"context\"},inplace=True)\n"]},{"output_type":"execute_result","data":{"text/plain":["      QuesId                                           question  \\\n","0          1  Who composed the Mahabharata and recited it at...   \n","1          2  What is the nature of the Mahabharata and what...   \n","2          3  How did creation begin according to the Mahabh...   \n","3          4  How will the universe be affected at the end o...   \n","4          5  How many generations of Devas were there, and ...   \n","...      ...                                                ...   \n","1114    1115          How does Agni respond to Drona's request?   \n","1115    1116  Who is Jarita referring to as the \"eldest\" and...   \n","1116    1117  What does Mandapala say about co-wives and cla...   \n","1117    1118   Who does Mandapala compare Jarita's jealousy to?   \n","1118    1119  What advice does Mandapala give regarding trus...   \n","\n","                                                 answer  \\\n","0     The Mahabharata was composed by Krishna-Dwaipa...   \n","1     The Mahabharata is a sacred work, an eminent n...   \n","2     At the beginning of the Yuga, from a mighty eg...   \n","3     At the end of the world and the expiration of ...   \n","4     The generation of Devas consisted of thirty-th...   \n","...                                                 ...   \n","1114  Agni responds positively to Drona's request an...   \n","1115  Jarita is referring to the eldest and next chi...   \n","1116  Mandapala states that co-wives and clandestine...   \n","1117  Mandapala compares Jarita's jealousy to Arundh...   \n","1118  Mandapala advises men to never trust women, ev...   \n","\n","                                                context  \n","0     THE MAHABHARATA ADI PARVA Section I\\nOm! Havin...  \n","1     THE MAHABHARATA ADI PARVA Section I\\nOm! Havin...  \n","2     THE MAHABHARATA ADI PARVA Section I\\nOm! Havin...  \n","3     And what is seen in the universe, whether anim...  \n","4     And what is seen in the universe, whether anim...  \n","...                                                 ...  \n","1114  \"Drona said, 'O lord of the universe, growing ...  \n","1115  \"Jarita then said, 'What hast thou to do with ...  \n","1116  \"Jarita then said, 'What hast thou to do with ...  \n","1117  \"Jarita then said, 'What hast thou to do with ...  \n","1118  \"Jarita then said, 'What hast thou to do with ...  \n","\n","[1119 rows x 4 columns]"],"text/html":["\n","\n","  <div id=\"df-6679394d-e0da-4e21-935a-b505eef0776b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>QuesId</th>\n","      <th>question</th>\n","      <th>answer</th>\n","      <th>context</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Who composed the Mahabharata and recited it at...</td>\n","      <td>The Mahabharata was composed by Krishna-Dwaipa...</td>\n","      <td>THE MAHABHARATA ADI PARVA Section I\\nOm! Havin...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>What is the nature of the Mahabharata and what...</td>\n","      <td>The Mahabharata is a sacred work, an eminent n...</td>\n","      <td>THE MAHABHARATA ADI PARVA Section I\\nOm! Havin...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>How did creation begin according to the Mahabh...</td>\n","      <td>At the beginning of the Yuga, from a mighty eg...</td>\n","      <td>THE MAHABHARATA ADI PARVA Section I\\nOm! Havin...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>How will the universe be affected at the end o...</td>\n","      <td>At the end of the world and the expiration of ...</td>\n","      <td>And what is seen in the universe, whether anim...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>How many generations of Devas were there, and ...</td>\n","      <td>The generation of Devas consisted of thirty-th...</td>\n","      <td>And what is seen in the universe, whether anim...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1114</th>\n","      <td>1115</td>\n","      <td>How does Agni respond to Drona's request?</td>\n","      <td>Agni responds positively to Drona's request an...</td>\n","      <td>\"Drona said, 'O lord of the universe, growing ...</td>\n","    </tr>\n","    <tr>\n","      <th>1115</th>\n","      <td>1116</td>\n","      <td>Who is Jarita referring to as the \"eldest\" and...</td>\n","      <td>Jarita is referring to the eldest and next chi...</td>\n","      <td>\"Jarita then said, 'What hast thou to do with ...</td>\n","    </tr>\n","    <tr>\n","      <th>1116</th>\n","      <td>1117</td>\n","      <td>What does Mandapala say about co-wives and cla...</td>\n","      <td>Mandapala states that co-wives and clandestine...</td>\n","      <td>\"Jarita then said, 'What hast thou to do with ...</td>\n","    </tr>\n","    <tr>\n","      <th>1117</th>\n","      <td>1118</td>\n","      <td>Who does Mandapala compare Jarita's jealousy to?</td>\n","      <td>Mandapala compares Jarita's jealousy to Arundh...</td>\n","      <td>\"Jarita then said, 'What hast thou to do with ...</td>\n","    </tr>\n","    <tr>\n","      <th>1118</th>\n","      <td>1119</td>\n","      <td>What advice does Mandapala give regarding trus...</td>\n","      <td>Mandapala advises men to never trust women, ev...</td>\n","      <td>\"Jarita then said, 'What hast thou to do with ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1119 rows × 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6679394d-e0da-4e21-935a-b505eef0776b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-82b150d4-08a8-4571-b6d7-2f9aa027b73b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-82b150d4-08a8-4571-b6d7-2f9aa027b73b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-82b150d4-08a8-4571-b6d7-2f9aa027b73b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6679394d-e0da-4e21-935a-b505eef0776b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6679394d-e0da-4e21-935a-b505eef0776b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":6}],"source":["# datasets = load_dataset(\"squad_v2\" if squad_v2 else \"squad\")\n","import pandas as pd\n","\n","df_qafinal = pd.read_csv('/content/drive/MyDrive/Booksummary/QA_Final.csv')\n","\n","df_prompt_qa = pd.read_csv(\"/content/drive/MyDrive/Booksummary/Question_Prompts_with_QA.csv\")\n","\n","df_prompt_qa  = df_prompt_qa.loc[df_prompt_qa.QA.notna()][['Section_Id','Context_Id','Prompt']]\n","df_prompt_qa['Context'] = df_prompt_qa['Prompt'].str.replace('Text: ', \"|\").str.replace('Question: \\n', \"|\").str.split(\"|\").str[1].str.strip()\n","\n","df_prompt_qa = df_prompt_qa[['Section_Id','Context_Id', 'Context']]\n","\n","df_qafinal = df_qafinal.merge(df_prompt_qa, left_on=\"ContextId\", right_on=\"Context_Id\", how=\"left\")\n","df_qafinal['Question'] = df_qafinal.Question.str.replace('Question: ','')\n","df_qafinal['Answer'] = df_qafinal.Answer.str.replace('Answer: ','')\n","data = df_qafinal[['QuesId','Question','Answer','Context']]\n","data.rename(columns={\"Question\":\"question\",\"Answer\":\"answer\",\"Context\":\"context\"},inplace=True)\n","data"]},{"cell_type":"markdown","metadata":{"id":"RzfPtOMoIrIu"},"source":["The `datasets` object itself is [`DatasetDict`](https://huggingface.co/docs/datasets/package_reference/main_classes.html#datasetdict), which contains one key for the training, validation and test set."]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","\n","train_data, val_data = train_test_split(data, test_size=0.2, random_state=42)\n","\n","# train_sampler = RandomSampler(train_data.index)\n","# val_sampler = RandomSampler(val_data.index)\n","\n","# qa_dataset = QA_Dataset(TOKENIZER, data, Q_LEN, T_LEN)\n","\n","# train_loader = DataLoader(qa_dataset, batch_size=BATCH_SIZE, sampler=train_sampler)\n","# val_loader   = DataLoader(qa_dataset, batch_size=BATCH_SIZE, sampler=val_sampler)\n","\n"],"metadata":{"id":"ShtEokVq50KF","executionInfo":{"status":"ok","timestamp":1689768101996,"user_tz":-330,"elapsed":927,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"C2FKqZDXiJIm"},"source":["We can see the training, validation and test sets all have a column for the context, the question and the answers to those questions."]},{"cell_type":"markdown","metadata":{"id":"u3EtYfeHIrIz"},"source":["To access an actual element, you need to select a split first, then give an index:"]},{"cell_type":"code","source":["train_data_list = []\n","val_data_list = []\n","\n","for i in train_data.index:\n","  train_data_list.append(\n","  {\"id\": train_data.loc[i,\"QuesId\"],\n","  \"context\" : train_data.loc[i,\"context\"],\n","  \"question\": train_data.loc[i,\"question\"],\n","  \"answer\" : train_data.loc[i,\"answer\"]})\n","\n","for i in val_data.index:\n","  val_data_list.append(\n","  {\"id\": val_data.loc[i,\"QuesId\"],\n","  \"context\" : val_data.loc[i,\"context\"],\n","  \"question\": val_data.loc[i,\"question\"],\n","  \"answer\" : val_data.loc[i,\"answer\"]})\n","\n"],"metadata":{"id":"XJxTBGFD8Sqz","executionInfo":{"status":"ok","timestamp":1689768101996,"user_tz":-330,"elapsed":5,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["datasets = {\"train\": train_data_list, \"validation\": val_data_list}"],"metadata":{"id":"8cjsDxAT-ywF","executionInfo":{"status":"ok","timestamp":1689768101997,"user_tz":-330,"elapsed":5,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","execution_count":10,"metadata":{"id":"X6HrpprwIrIz","outputId":"5b9b8749-fc76-47dd-fee4-7b3335a71507","executionInfo":{"status":"ok","timestamp":1689768104255,"user_tz":-330,"elapsed":5,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'id': 1053,\n"," 'context': '\"Vaisampayana said, \\'Then Arjuna of immeasurable prowess saw, one after another, all the sacred waters and other holy places that were on the shores of the western ocean. Vibhatsu reached the sacred spot called Prabhasa. When the invisible Arjuna arrived at that sacred and delightful region, the slayer of Madhu (Krishna) heard of it. Madhava soon went there to see his friend, the son of Kunti. Krishna and Arjuna met together and embracing each other enquired after each other\\'s welfare. Those dear friends, who were none else than the Rishis Nara and Narayana of old, sat down. Vasudeva asked Arjuna about his travels, saying, \\'Why, O Pandava art thou wandering over the earth, beholding all the sacred waters and other holy places?\\' Then Arjuna told him everything that had happened. Hearing everything, that mighty hero of Vrishni\\'s race said, \\'This is as it should be.\\' And Krishna and Arjuna having sported as they liked, for some time at Prabhasa, went to the Raivataka mountain to pass some days there. Before they arrived at Raivataka, that mountain had, at the command of Krishna been well-adorned by many artificers. Much food also had, at Krishna\\'s command, been collected there. Enjoying everything that had been collected there for him, Arjuna sat with Vasudeva to see the performances of the actors and the dancers. Then the high-souled Pandava, dismissing them all with proper respect, laid himself down on a well-adorned and excellent bed. As the strong-armed one lay on that excellent bed, he described unto Krishna everything about the sacred waters, the lakes and the mountains, the rivers and the forests he had seen. While he was speaking of these, stretched upon that celestial bed, sleep, O Janamejaya, stole upon him. He rose in the morning, awakened, by sweet songs and melodious notes of the Vina (guitar) and the panegyrics and benedictions of the bards. After he had gone through the necessary acts and ceremonies, he was affectionately accosted by him of the Vrishni race. Riding upon a golden car, the hero then set out for Dwaraka, the capital of the Yadavas. And, O Janamejaya, for honouring the son of Kunti, the city of Dwaraka, was well-adorned, even all the gardens and houses within it. The citizens of Dwaraka, desirous of beholding the son of Kunti, began to pour eagerly into the public thoroughfares by hundreds of thousands. In the public squares and thoroughfares, hundreds and thousands of women, mixing with the men, swelled the great crowd of the Bhojas, the Vrishnis, and the Andhakas, that had collected there. Arjuna was welcomed with respect by all the sons of Bhojas, the Vrishnis, and the Andhakas. And he, in his turn, worshipped those that deserved his worship, receiving their blessings. The hero was welcomed with affectionate reception by all the young men of the Yadava tribe. He repeatedly embraced all that were equal to him in age. Wending then to the delightful mansion of Krishna that was filled with gems and every article of enjoyment, he took up his abode there with Krishna for many days.\\'\"',\n"," 'question': 'What was the sacred spot that Arjuna reached after seeing all the sacred waters and holy places?',\n"," 'answer': 'Arjuna reached the sacred spot called Prabhasa.'}"]},"metadata":{},"execution_count":10}],"source":["datasets[\"train\"][10]"]},{"cell_type":"markdown","metadata":{"id":"R5qV2jcUiJIm"},"source":["We can see the answers are indicated by their start position in the text (here at character 515) and their full text, which is a substring of the context as we mentioned above."]},{"cell_type":"markdown","metadata":{"id":"WHUmphG3IrI3"},"source":["To get a sense of what the data looks like, the following function will show some examples picked randomly from the dataset and decoded back to strings."]},{"cell_type":"code","execution_count":11,"metadata":{"id":"i3j8APAoIrI3","executionInfo":{"status":"ok","timestamp":1689768109563,"user_tz":-330,"elapsed":670,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["from datasets import ClassLabel, Sequence\n","import random\n","import pandas as pd\n","from IPython.display import display, HTML\n","\n","\n","def show_random_elements(dataset, num_examples=10):\n","    assert num_examples <= len(\n","        dataset\n","    ), \"Can't pick more elements than there are in the dataset.\"\n","    picks = []\n","    for _ in range(num_examples):\n","        pick = random.randint(0, len(dataset) - 1)\n","        while pick in picks:\n","            pick = random.randint(0, len(dataset) - 1)\n","        picks.append(pick)\n","\n","    df = pd.DataFrame(dataset[picks])\n","    for column, typ in dataset.features.items():\n","        if isinstance(typ, ClassLabel):\n","            df[column] = df[column].transform(lambda i: typ.names[i])\n","        elif isinstance(typ, Sequence) and isinstance(typ.feature, ClassLabel):\n","            df[column] = df[column].transform(\n","                lambda x: [typ.feature.names[i] for i in x]\n","            )\n","    display(HTML(df.to_html()))"]},{"cell_type":"code","source":["datasets[\"train\"]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","output_embedded_package_id":"1UwRFQ0kLf8CpLXeWr3rXYRl_1QiggndP"},"id":"vLoloUNEB40h","executionInfo":{"status":"ok","timestamp":1689768146520,"user_tz":-330,"elapsed":6989,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"ed22eb3a-3b5a-46cf-d90c-b34f047f95ed"},"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","execution_count":15,"metadata":{"id":"SZy5tRB_IrI7","outputId":"a3aab968-45b5-4ab1-ed42-9271d382c914","scrolled":true,"executionInfo":{"status":"error","timestamp":1689768246117,"user_tz":-330,"elapsed":21,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"colab":{"base_uri":"https://localhost:8080/","height":311}},"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-15-06c5839888b0>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mshow_random_elements\u001b[0m\u001b[0;34m(\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdatasets\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"train\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-11-00f1de25b971>\u001b[0m in \u001b[0;36mshow_random_elements\u001b[0;34m(dataset, num_examples)\u001b[0m\n\u001b[1;32m     16\u001b[0m         \u001b[0mpicks\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mpick\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     17\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 18\u001b[0;31m     \u001b[0mdf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDataFrame\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mpicks\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     19\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0mcolumn\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtyp\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mdataset\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfeatures\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     20\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mtyp\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mClassLabel\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__getitem__\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3811\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mis_iterator\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3812\u001b[0m                 \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3813\u001b[0;31m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_indexer_strict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"columns\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3814\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3815\u001b[0m         \u001b[0;31m# take() does not accept boolean indexers\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_get_indexer_strict\u001b[0;34m(self, key, axis_name)\u001b[0m\n\u001b[1;32m   6068\u001b[0m             \u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mnew_indexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reindex_non_unique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6069\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6070\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_raise_if_missing\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeyarr\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis_name\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6071\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6072\u001b[0m         \u001b[0mkeyarr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtake\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36m_raise_if_missing\u001b[0;34m(self, key, indexer, axis_name)\u001b[0m\n\u001b[1;32m   6128\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0muse_interval_msg\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6129\u001b[0m                     \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6130\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"None of [{key}] are in the [{axis_name}]\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6131\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6132\u001b[0m             \u001b[0mnot_found\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mensure_index\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmissing_mask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnonzero\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munique\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"None of [Int64Index([816, 580, 138, 701, 231, 91, 346, 634, 533, 259], dtype='int64')] are in the [columns]\""]}],"source":["show_random_elements( pd.DataFrame(datasets[\"train\"]))"]},{"cell_type":"markdown","metadata":{"id":"n9qywopnIrJH"},"source":["## Preprocessing the training data"]},{"cell_type":"markdown","metadata":{"id":"YVx71GdAIrJH"},"source":["Before we can feed those texts to our model, we need to preprocess them. This is done by a 🤗 Transformers `Tokenizer` which will (as the name indicates) tokenize the inputs (including converting the tokens to their corresponding IDs in the pretrained vocabulary) and put it in a format the model expects, as well as generate the other inputs that model requires.\n","\n","To do all of this, we instantiate our tokenizer with the `AutoTokenizer.from_pretrained` method, which will ensure:\n","\n","- we get a tokenizer that corresponds to the model architecture we want to use,\n","- we download the vocabulary used when pretraining this specific checkpoint.\n","\n","That vocabulary will be cached, so it's not downloaded again the next time we run the cell."]},{"cell_type":"code","execution_count":16,"metadata":{"id":"eXNLu_-nIrJI","executionInfo":{"status":"ok","timestamp":1689768270438,"user_tz":-330,"elapsed":2781,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"95729646-b6ce-401a-803b-a115e749b3d3","colab":{"base_uri":"https://localhost:8080/","height":145,"referenced_widgets":["60c1a72a6309442c97d51d649ab538e2","f4c1383043a842399ab6f95e24ce4274","6138be1543af46ca8f4c6ead54ee0fdb","fc0591546a454164be3f02dc49b9c57a","c5566239a6e548fb99a99536ceeac56c","7f62e8dce08d400abaa3eb1c798a98a9","5bfcd9395a174a15891dd502e5747551","e4d0d6422a4b4bc58d70ab69c1dc32c3","1b560a8855b24fcea182113b8d0534a2","a4748fb2d83c414f904b569f0f20f355","f1536e2e972d41238738d6ea3ec16319","233f8ed519e941f89861b0fb906125e5","3e9753c008484f8aba6c7d4a7aecdfce","4085c98a71c24a998bcc724d27165399","578247b77fb047d68f7028095a161737","9cab44dddb71433e8983a0db8581b782","23bfe7c5eb8249a482036f3de2d7e2b7","b0250b06523849cea3e3bdfc3651b062","361c36db7936429f993c51dfdc4dee3c","5fc5eb8e96b14b749a6c496a15f4a50c","69f30718126e48e7969dd672a7ad8530","1a5e49b3f727421a98db68ad2987b362","ae0f19ce3ee249f7a70c707d4bc59dc3","76ad43306f614cd2a400807fefef2cfe","04f4e1519e6f439597a1676b81036bd3","5b3f56873b9c4821b41d6b6de9db84ea","ae9be007f6704faa9b93bd63658ef3b5","203a8244cfac4507b298f916183fcae3","cc859e40953e460fb5b130e0efa39289","ff5454951c0a48899c2616aca9284dae","140c173724a54f829ba05a85deadebec","d6e2bb7f370f4fc08306a4844ea583b3","23b44f8b21814864a41055577b1bc784","38d04d6cbed34753b55f51c372952af6","88d04164f11c4b9fbfe19e20ee5b85f9","7a8f25edec02493a9b7ae8b3c4fc51d0","964faa98e9d348c49beae71342891da8","457bf58ac674481fad5922c6932fccdf","0fa8f3b65fe6488e91c7da9a9d0d8533","7b18418a1dfe492c8bf73b5810e672e1","9a3b64ac1e494d9488bfd13fbb580038","4e962af9dad74a1eadfc5906a7a0293e","270bbb346a9d4db8a30ed9a894064454","327c07f30f0f4952adfdd0b90385889b"]}},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading (…)okenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"60c1a72a6309442c97d51d649ab538e2"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)lve/main/config.json:   0%|          | 0.00/483 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"233f8ed519e941f89861b0fb906125e5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)solve/main/vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ae0f19ce3ee249f7a70c707d4bc59dc3"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)/main/tokenizer.json:   0%|          | 0.00/466k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"38d04d6cbed34753b55f51c372952af6"}},"metadata":{}}],"source":["from transformers import AutoTokenizer\n","\n","tokenizer = AutoTokenizer.from_pretrained(model_checkpoint)"]},{"cell_type":"markdown","metadata":{"id":"Vl6IidfdIrJK"},"source":["The following assertion ensures that our tokenizer is a fast tokenizer (backed by Rust) from the 🤗 Tokenizers library. Those fast tokenizers are available for almost all models, and we will need some of the special features they have for our preprocessing."]},{"cell_type":"code","execution_count":17,"metadata":{"id":"UO0gLSbniJIo","executionInfo":{"status":"ok","timestamp":1689768281617,"user_tz":-330,"elapsed":665,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["import transformers\n","\n","assert isinstance(tokenizer, transformers.PreTrainedTokenizerFast)"]},{"cell_type":"markdown","metadata":{"id":"mWlqCqryiJIo"},"source":["You can check which type of models have a fast tokenizer available and which don't in the [big table of models](https://huggingface.co/transformers/index.html#bigtable)."]},{"cell_type":"markdown","metadata":{"id":"rowT4iCLIrJK"},"source":["You can directly call this tokenizer on two sentences (one for the answer, one for the context):"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"a5hBlsrHIrJL","outputId":"1099133f-641e-4b0c-d9f8-b2bd7098d76d","executionInfo":{"status":"ok","timestamp":1689768288211,"user_tz":-330,"elapsed":6,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'input_ids': [101, 2054, 2003, 2115, 2171, 1029, 102, 2026, 2171, 2003, 25353, 22144, 2378, 1012, 102], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}"]},"metadata":{},"execution_count":18}],"source":["tokenizer(\"What is your name?\", \"My name is Sylvain.\")"]},{"cell_type":"markdown","metadata":{"id":"RW7VJM5jiJIp"},"source":["Depending on the model you selected, you will see different keys in the dictionary returned by the cell above. They don't matter much for what we're doing here (just know they are required by the model we will instantiate later), you can learn more about them in [this tutorial](https://huggingface.co/transformers/preprocessing.html) if you're interested.\n","\n","Now one specific thing for the preprocessing in question answering is how to deal with very long documents. We usually truncate them in other tasks, when they are longer than the model maximum sentence length, but here, removing part of the the context might result in losing the answer we are looking for. To deal with this, we will allow one (long) example in our dataset to give several input features, each of length shorter than the maximum length of the model (or the one we set as a hyper-parameter). Also, just in case the answer lies at the point we split a long context, we allow some overlap between the features we generate controlled by the hyper-parameter `doc_stride`:"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"IjY7luG6iJIp","executionInfo":{"status":"ok","timestamp":1689768378089,"user_tz":-330,"elapsed":920,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["max_length = 384  # The maximum length of a feature (question and context)\n","doc_stride = 128  # The allowed overlap between two part of the context when splitting is performed."]},{"cell_type":"markdown","metadata":{"id":"VjIEoTSOiJIz"},"source":["Let's find one long example in our dataset:"]},{"cell_type":"code","source":["len(datasets[\"train\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kgHD65IGCl66","executionInfo":{"status":"ok","timestamp":1689768327127,"user_tz":-330,"elapsed":764,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"f2985803-3b4d-4317-f415-6f68c82aa379"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["895"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","execution_count":20,"metadata":{"id":"wMSF4yKNiJIz","executionInfo":{"status":"ok","timestamp":1689768333159,"user_tz":-330,"elapsed":3,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["for i, example in enumerate(datasets[\"train\"]):\n","    if len(tokenizer(example[\"question\"], example[\"context\"])[\"input_ids\"]) > 384:\n","        break\n","example = datasets[\"train\"][i]"]},{"cell_type":"code","source":["example"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B3qFVvozCqME","executionInfo":{"status":"ok","timestamp":1689768347349,"user_tz":-330,"elapsed":704,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"e737d674-c2de-4a0e-a68d-c10bff721667"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'id': 712,\n"," 'context': '\"Vaisampayana said, \\'Then, O king, the mighty son of Bharadyaja presented himself before Drupada, and addressing that monarch, said, \\'Know me for thy friend.\\' Thus addressed by his friend, the son of Bharadwaja, with a joyous heart, the lord of the Panchalas was ill-able to bear that speech. The king, intoxicated with the pride of wealth, contracted his brows in wrath, and with reddened eyes spake these words unto Drona, \\'O Brahmana, thy intelligence is scarcely of a high order, inasmuch as thou sayest unto me, all on a sudden, that thou art my friend! O thou of dull apprehension, great kings can never be friends with such luckless and indigent wights as thou! It is true there had been friendship between thee and me before, for we were then both equally circumstanced. But Time that impaireth everything in its course, impaireth friendship also. In this world, friendship never endureth for ever in any heart. Time weareth it off and anger destroyeth it too. Do not stick, therefore, to that worn-off friendship. Think not of it any longer. The friendship I had with thee, O first of Brahmanas, was for a particular purpose. Friendship can never subsist between a poor man and a rich man, between a man of letters and an unlettered mind, between a hero and a coward. Why dost thou desire the continuance of our former friendship? There may be friendship or hostility between persons equally situated as to wealth or might. The indigent and the affluent can neither be friends nor quarrel with each other. One of impure birth can never be a friend to one of pure birth; one who is not a car-warrior can never be a friend to one who is so; and one who is not a king never have a king for his friend. Therefore, why dost thou desire the continuance of our former friendship?\\'',\n"," 'question': 'Why did Drupada question the continuation of their former friendship?',\n"," 'answer': 'Drupada believed that friendship could not exist between a poor man and a rich man, a man of letters and an unlettered mind, or a hero and a coward.'}"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"M0Co4Ev2iJI0"},"source":["Without any truncation, we get the following length for the input IDs:"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"KQAomRIHiJI0","executionInfo":{"status":"ok","timestamp":1689768360971,"user_tz":-330,"elapsed":638,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"c1a9c2e4-8656-486e-f62b-0f4a3832a946","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["442"]},"metadata":{},"execution_count":22}],"source":["len(tokenizer(example[\"question\"], example[\"context\"])[\"input_ids\"])"]},{"cell_type":"markdown","metadata":{"id":"e7A9_dcViJI0"},"source":["Now, if we just truncate, we will lose information (and possibly the answer to our question):"]},{"cell_type":"code","execution_count":25,"metadata":{"id":"-TvMor9XiJI1","executionInfo":{"status":"ok","timestamp":1689768383417,"user_tz":-330,"elapsed":952,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"48a062f5-308b-4f5b-e1cc-1aa93722c7bd","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["384"]},"metadata":{},"execution_count":25}],"source":["len(\n","    tokenizer(\n","        example[\"question\"],\n","        example[\"context\"],\n","        max_length=max_length,\n","        truncation=\"only_second\",\n","    )[\"input_ids\"]\n",")"]},{"cell_type":"markdown","metadata":{"id":"fhJuJX_6iJI1"},"source":["Note that we never want to truncate the question, only the context, and so we use the `only_second` truncation method. Our tokenizer can automatically return a list of features capped by a certain maximum length, with the overlap we talked about above, we just have to tell it to do so with `return_overflowing_tokens=True` and by passing the stride:"]},{"cell_type":"code","execution_count":26,"metadata":{"id":"f8gTsPVmiJI1","executionInfo":{"status":"ok","timestamp":1689768393227,"user_tz":-330,"elapsed":647,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["tokenized_example = tokenizer(\n","    example[\"question\"],\n","    example[\"context\"],\n","    max_length=max_length,\n","    truncation=\"only_second\",\n","    return_overflowing_tokens=True,\n","    stride=doc_stride,\n",")"]},{"cell_type":"markdown","metadata":{"id":"Bg5-_gLWiJI2"},"source":["Now we don't have one list of `input_ids`, but several:"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"tcLQfYGFiJI2","executionInfo":{"status":"ok","timestamp":1689768398919,"user_tz":-330,"elapsed":634,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"449a0905-8229-4581-a8e5-6151ad222efa","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[384, 202]"]},"metadata":{},"execution_count":27}],"source":["[len(x) for x in tokenized_example[\"input_ids\"]]"]},{"cell_type":"markdown","metadata":{"id":"Dg-HxxQJiJI2"},"source":["And if we decode them, we can see the overlap:"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"Twj-yMUViJI2","executionInfo":{"status":"ok","timestamp":1689768408995,"user_tz":-330,"elapsed":2695,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"1c1107f6-bcf3-4c00-a8a1-eaa57736dc0c","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[CLS] why did drupada question the continuation of their former friendship? [SEP] \" vaisampayana said,'then, o king, the mighty son of bharadyaja presented himself before drupada, and addressing that monarch, said,'know me for thy friend.'thus addressed by his friend, the son of bharadwaja, with a joyous heart, the lord of the panchalas was ill - able to bear that speech. the king, intoxicated with the pride of wealth, contracted his brows in wrath, and with reddened eyes spake these words unto drona,'o brahmana, thy intelligence is scarcely of a high order, inasmuch as thou sayest unto me, all on a sudden, that thou art my friend! o thou of dull apprehension, great kings can never be friends with such luckless and indigent wights as thou! it is true there had been friendship between thee and me before, for we were then both equally circumstanced. but time that impaireth everything in its course, impaireth friendship also. in this world, friendship never endureth for ever in any heart. time weareth it off and anger destroyeth it too. do not stick, therefore, to that worn - off friendship. think not of it any longer. the friendship i had with thee, o first of brahmanas, was for a particular purpose. friendship can never subsist between a poor man and a rich man, between a man of letters and an unlettered mind, between a hero and a coward. why dost thou desire the continuance of our former friendship? there may be friendship or hostility between persons equally situated as to wealth or might. the indigent and the affluent can neither be friends nor quarrel with each other. one of impure birth can never be a [SEP]\n","[CLS] why did drupada question the continuation of their former friendship? [SEP] stick, therefore, to that worn - off friendship. think not of it any longer. the friendship i had with thee, o first of brahmanas, was for a particular purpose. friendship can never subsist between a poor man and a rich man, between a man of letters and an unlettered mind, between a hero and a coward. why dost thou desire the continuance of our former friendship? there may be friendship or hostility between persons equally situated as to wealth or might. the indigent and the affluent can neither be friends nor quarrel with each other. one of impure birth can never be a friend to one of pure birth ; one who is not a car - warrior can never be a friend to one who is so ; and one who is not a king never have a king for his friend. therefore, why dost thou desire the continuance of our former friendship?'[SEP]\n"]}],"source":["for x in tokenized_example[\"input_ids\"][:2]:\n","    print(tokenizer.decode(x))"]},{"cell_type":"markdown","metadata":{"id":"rbl2-KTxiJI3"},"source":["It's going to take some work to properly label the answers here: we need to find in which of those features the answer actually is, and where exactly in that feature. The models we will use require the start and end positions of these answers in the tokens, so we will also need to to map parts of the original context to some tokens. Thankfully, the tokenizer we're using can help us with that by returning an `offset_mapping`:"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"5nRiCS3TiJI3","executionInfo":{"status":"ok","timestamp":1689768422261,"user_tz":-330,"elapsed":646,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"75bb1f62-ca2a-4c83-9cd8-c4a87b959971","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[(0, 0), (0, 3), (4, 7), (8, 10), (10, 12), (12, 15), (16, 24), (25, 28), (29, 41), (42, 44), (45, 50), (51, 57), (58, 68), (68, 69), (0, 0), (0, 1), (1, 3), (3, 6), (6, 8), (8, 12), (12, 13), (14, 18), (18, 19), (20, 21), (21, 25), (25, 26), (27, 28), (29, 33), (33, 34), (35, 38), (39, 45), (46, 49), (50, 52), (53, 54), (54, 58), (58, 61), (61, 63), (64, 73), (74, 81), (82, 88), (89, 91), (91, 93), (93, 96), (96, 97), (98, 101), (102, 112), (113, 117), (118, 125), (125, 126), (127, 131), (131, 132), (133, 134), (134, 138), (139, 141), (142, 145), (146, 149), (150, 156), (156, 157), (157, 158), (159, 163), (164, 173), (174, 176), (177, 180), (181, 187), (187, 188), (189, 192), (193, 196), (197, 199), (200, 201), (201, 205), (205, 206), (206, 208), (208, 210), (210, 211), (212, 216), (217, 218), (219, 222), (222, 225), (226, 231), (231, 232), (233, 236), (237, 241), (242, 244), (245, 248), (249, 252), (252, 256), (256, 258), (259, 262), (263, 266), (266, 267), (267, 271), (272, 274), (275, 279), (280, 284), (285, 291), (291, 292), (293, 296), (297, 301), (301, 302), (303, 307)]\n"]}],"source":["tokenized_example = tokenizer(\n","    example[\"question\"],\n","    example[\"context\"],\n","    max_length=max_length,\n","    truncation=\"only_second\",\n","    return_overflowing_tokens=True,\n","    return_offsets_mapping=True,\n","    stride=doc_stride,\n",")\n","print(tokenized_example[\"offset_mapping\"][0][:100])"]},{"cell_type":"markdown","metadata":{"id":"vccMVM1liJI3"},"source":["This gives the corresponding start and end character in the original text for each token in our input IDs. The very first token (`[CLS]`) has (0, 0) because it doesn't correspond to any part of the question/answer, then the second token is the same as the characters 0 to 3 of the question:"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"_L3RGMCEiJI3","executionInfo":{"status":"ok","timestamp":1689768430536,"user_tz":-330,"elapsed":1323,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"acb5be41-3f34-4647-ef18-32fd39b6244e","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["why Why\n"]}],"source":["first_token_id = tokenized_example[\"input_ids\"][0][1]\n","offsets = tokenized_example[\"offset_mapping\"][0][1]\n","print(\n","    tokenizer.convert_ids_to_tokens([first_token_id])[0],\n","    example[\"question\"][offsets[0] : offsets[1]],\n",")"]},{"cell_type":"markdown","metadata":{"id":"aWHOxJLjiJI4"},"source":["So we can use this mapping to find the position of the start and end tokens of our answer in a given feature. We just have to distinguish which parts of the offsets correspond to the question and which part correspond to the context, this is where the `sequence_ids` method of our `tokenized_example` can be useful:"]},{"cell_type":"code","execution_count":31,"metadata":{"id":"EVSyosjxiJI4","executionInfo":{"status":"ok","timestamp":1689768435229,"user_tz":-330,"elapsed":9,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"d20089aa-6bd8-4b7b-d287-3eafcaee1bcf","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["[None, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, None, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, None]\n"]}],"source":["sequence_ids = tokenized_example.sequence_ids()\n","print(sequence_ids)"]},{"cell_type":"markdown","metadata":{"id":"0PsccWskiJI4"},"source":["It returns `None` for the special tokens, then 0 or 1 depending on whether the corresponding token comes from the first sentence past (the question) or the second (the context). Now with all of this, we can find the first and last token of the answer in one of our input feature (or if the answer is not in this feature):"]},{"cell_type":"code","source":["example"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3ditze7iDFjJ","executionInfo":{"status":"ok","timestamp":1689768458102,"user_tz":-330,"elapsed":631,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"dc6011c9-46b4-4fa3-9310-43686bb39a18"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'id': 712,\n"," 'context': '\"Vaisampayana said, \\'Then, O king, the mighty son of Bharadyaja presented himself before Drupada, and addressing that monarch, said, \\'Know me for thy friend.\\' Thus addressed by his friend, the son of Bharadwaja, with a joyous heart, the lord of the Panchalas was ill-able to bear that speech. The king, intoxicated with the pride of wealth, contracted his brows in wrath, and with reddened eyes spake these words unto Drona, \\'O Brahmana, thy intelligence is scarcely of a high order, inasmuch as thou sayest unto me, all on a sudden, that thou art my friend! O thou of dull apprehension, great kings can never be friends with such luckless and indigent wights as thou! It is true there had been friendship between thee and me before, for we were then both equally circumstanced. But Time that impaireth everything in its course, impaireth friendship also. In this world, friendship never endureth for ever in any heart. Time weareth it off and anger destroyeth it too. Do not stick, therefore, to that worn-off friendship. Think not of it any longer. The friendship I had with thee, O first of Brahmanas, was for a particular purpose. Friendship can never subsist between a poor man and a rich man, between a man of letters and an unlettered mind, between a hero and a coward. Why dost thou desire the continuance of our former friendship? There may be friendship or hostility between persons equally situated as to wealth or might. The indigent and the affluent can neither be friends nor quarrel with each other. One of impure birth can never be a friend to one of pure birth; one who is not a car-warrior can never be a friend to one who is so; and one who is not a king never have a king for his friend. Therefore, why dost thou desire the continuance of our former friendship?\\'',\n"," 'question': 'Why did Drupada question the continuation of their former friendship?',\n"," 'answer': 'Drupada believed that friendship could not exist between a poor man and a rich man, a man of letters and an unlettered mind, or a hero and a coward.'}"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["len(tokenized_example[\"input_ids\"][0]) - 1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4kTHrxjrED2j","executionInfo":{"status":"ok","timestamp":1689768809335,"user_tz":-330,"elapsed":618,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"60ca0b59-389b-4417-d47c-6b6e70413ea8"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["383"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","execution_count":40,"metadata":{"id":"8Ifr0L1YiJI4","executionInfo":{"status":"ok","timestamp":1689768904074,"user_tz":-330,"elapsed":677,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"b492db7b-aae7-4191-ac7e-ce5c3d5dc3cd","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["17 56\n"]}],"source":["answers = example[\"answer\"]\n","start_char = 4 #answers[\"answer_start\"][0]\n","end_char = start_char + len(answers)\n","\n","# Start token index of the current span in the text.\n","token_start_index = 0\n","while sequence_ids[token_start_index] != 1:\n","    token_start_index += 1\n","\n","# End token index of the current span in the text.\n","token_end_index = len(tokenized_example[\"input_ids\"][0]) - 1\n","while sequence_ids[token_end_index] != 1:\n","    token_end_index -= 1\n","\n","# Detect if the answer is out of the span (in which case this feature is labeled with the CLS index).\n","offsets = tokenized_example[\"offset_mapping\"][0]\n","if (\n","    offsets[token_start_index][0] <= start_char\n","    and offsets[token_end_index][1] >= end_char\n","):\n","    # Move the token_start_index and token_end_index to the two ends of the answer.\n","    # Note: we could go after the last offset if the answer is the last word (edge case).\n","    while (\n","        token_start_index < len(offsets) and offsets[token_start_index][0] <= start_char\n","    ):\n","        token_start_index += 1\n","    start_position = token_start_index - 1\n","    while offsets[token_end_index][1] >= end_char:\n","        token_end_index -= 1\n","    end_position = token_end_index + 1\n","    print(start_position, end_position)\n","else:\n","    print(\"The answer is not in this feature.\")"]},{"cell_type":"markdown","metadata":{"id":"3JvTLTN5iJI5"},"source":["And we can double check that it is indeed the correct answer:"]},{"cell_type":"code","execution_count":42,"metadata":{"id":"j5sCWfkiiJI5","executionInfo":{"status":"ok","timestamp":1689768929569,"user_tz":-330,"elapsed":654,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"3bb3dc04-1cf1-4053-d71c-1750e8bd57ac","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["##isampayana said,'then, o king, the mighty son of bharadyaja presented himself before drupada, and addressing that monarch, said,'know me for thy friend\n","Drupada believed that friendship could not exist between a poor man and a rich man, a man of letters and an unlettered mind, or a hero and a coward.\n"]}],"source":["print(\n","    tokenizer.decode(\n","        tokenized_example[\"input_ids\"][0][start_position : end_position + 1]\n","    )\n",")\n","print(answers)"]},{"cell_type":"markdown","metadata":{"id":"zxXtOvY_iJI5"},"source":["For this notebook to work with any kind of model, we need to account for the special case where the model expects padding on the left (in which case we switch the order of the question and the context):"]},{"cell_type":"code","execution_count":43,"metadata":{"id":"o1MNXHBsiJI5","executionInfo":{"status":"ok","timestamp":1689768941933,"user_tz":-330,"elapsed":724,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["pad_on_right = tokenizer.padding_side == \"right\""]},{"cell_type":"markdown","metadata":{"id":"PRlr5eV1iJI5"},"source":["Now let's put everything together in one function we will apply to our training set. In the case of impossible answers (the answer is in another feature given by an example with a long context), we set the cls index for both the start and end position. We could also simply discard those examples from the training set if the flag `allow_impossible_answers` is `False`. Since the preprocessing is already complex enough as it is, we've kept is simple for this part."]},{"cell_type":"code","execution_count":71,"metadata":{"id":"IgnXpnnTiJI6","executionInfo":{"status":"ok","timestamp":1689769723115,"user_tz":-330,"elapsed":707,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}}},"outputs":[],"source":["def prepare_train_features(examples):\n","    # Tokenize our examples with truncation and padding, but keep the overflows using a stride. This results\n","    # in one example possible giving several features when a context is long, each of those features having a\n","    # context that overlaps a bit the context of the previous feature.\n","\n","    tokenized_examples = tokenizer(\n","        examples[0][\"question\" if pad_on_right else \"context\"],\n","        examples[0][\"context\" if pad_on_right else \"question\"],\n","        truncation=\"only_second\" if pad_on_right else \"only_first\",\n","        max_length=max_length,\n","        stride=doc_stride,\n","        return_overflowing_tokens=True,\n","        return_offsets_mapping=True,\n","        padding=\"max_length\",\n","    )\n","\n","    # Since one example might give us several features if it has a long context, we need a map from a feature to\n","    # its corresponding example. This key gives us just that.\n","    sample_mapping = tokenized_examples.pop(\"overflow_to_sample_mapping\")\n","    # The offset mappings will give us a map from token to character position in the original context. This will\n","    # help us compute the start_positions and end_positions.\n","    offset_mapping = tokenized_examples.pop(\"offset_mapping\")\n","\n","    # Let's label those examples!\n","    tokenized_examples[\"start_positions\"] = []\n","    tokenized_examples[\"end_positions\"] = []\n","\n","    for i, offsets in enumerate(offset_mapping):\n","        # We will label impossible answers with the index of the CLS token.\n","        input_ids = tokenized_examples[\"input_ids\"][i]\n","        cls_index = input_ids.index(tokenizer.cls_token_id)\n","\n","        # Grab the sequence corresponding to that example (to know what is the context and what is the question).\n","        sequence_ids = tokenized_examples.sequence_ids(i)\n","\n","        # One example can give several spans, this is the index of the example containing this span of text.\n","        sample_index = sample_mapping[i]\n","        answers = examples[\"answers\"][sample_index]\n","        # If no answers are given, set the cls_index as answer.\n","        if len(answers[\"answer_start\"]) == 0:\n","            tokenized_examples[\"start_positions\"].append(cls_index)\n","            tokenized_examples[\"end_positions\"].append(cls_index)\n","        else:\n","            # Start/end character index of the answer in the text.\n","            start_char = answers[\"answer_start\"][0]\n","            end_char = start_char + len(answers[\"text\"][0])\n","\n","            # Start token index of the current span in the text.\n","            token_start_index = 0\n","            while sequence_ids[token_start_index] != (1 if pad_on_right else 0):\n","                token_start_index += 1\n","\n","            # End token index of the current span in the text.\n","            token_end_index = len(input_ids) - 1\n","            while sequence_ids[token_end_index] != (1 if pad_on_right else 0):\n","                token_end_index -= 1\n","\n","            # Detect if the answer is out of the span (in which case this feature is labeled with the CLS index).\n","            if not (\n","                offsets[token_start_index][0] <= start_char\n","                and offsets[token_end_index][1] >= end_char\n","            ):\n","                tokenized_examples[\"start_positions\"].append(cls_index)\n","                tokenized_examples[\"end_positions\"].append(cls_index)\n","            else:\n","                # Otherwise move the token_start_index and token_end_index to the two ends of the answer.\n","                # Note: we could go after the last offset if the answer is the last word (edge case).\n","                while (\n","                    token_start_index < len(offsets)\n","                    and offsets[token_start_index][0] <= start_char\n","                ):\n","                    token_start_index += 1\n","                tokenized_examples[\"start_positions\"].append(token_start_index - 1)\n","                while offsets[token_end_index][1] >= end_char:\n","                    token_end_index -= 1\n","                tokenized_examples[\"end_positions\"].append(token_end_index + 1)\n","\n","    return tokenized_examples"]},{"cell_type":"markdown","metadata":{"id":"0lm8ozrJIrJR"},"source":["This function works with one or several examples. In the case of several examples, the tokenizer will return a list of lists for each key:"]},{"cell_type":"code","source":["datasets[\"train\"][:5][0]['context']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":139},"id":"Eh38TsuyFnUy","executionInfo":{"status":"ok","timestamp":1689769634902,"user_tz":-330,"elapsed":631,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"b8e849f0-44f2-4eb7-de5a-dba9757236bb"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'\"That Rishi had a son by name Sringin, of tender years, gifted with great energy, deep in ascetic penances, severe in his vows, very wrathful, and difficult to be appeased. At times, he worshipped with great attention and respect his preceptor seated with ease on his seat and ever engaged in the good of creatures.\\n\"And commanded by his preceptor, he was coming home when, O best of Brahmanas, a companion of his, a Rishi\\'s son named Krisa in a playful mood laughingly spoke unto him. And Sringin, wrathful and like unto poison itself, hearing these words in reference to his father, blazed up in rage.\\'\\n\"And Krisa said, \\'Be not proud, O Sringin, for ascetic as thou art and possessed of energy, thy father bears on his shoulders a dead snake. Henceforth speak not a word to sons of Rishis like ourselves who have knowledge of the truth, are deep in ascetic penances, and have attained success. Where is that manliness of thine, those high words of thine begotten of pride, when thou must have to behold thy father bearing a dead snake? O best of all the Munis, thy father too had done nothing to deserve this treatment, and it is for this that I am particularly sorry as if the punishment were mine.\\'\"'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":70}]},{"cell_type":"code","execution_count":72,"metadata":{"id":"-b70jh26IrJS","colab":{"base_uri":"https://localhost:8080/","height":287},"executionInfo":{"status":"error","timestamp":1689769732915,"user_tz":-330,"elapsed":948,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"7d3b9e9d-2bfb-4e62-9105-e56befa0c40a"},"outputs":[{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-72-7ab82785d1d2>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mfeatures\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mprepare_train_features\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdatasets\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"train\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;36m5\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m<ipython-input-71-95531a9beb91>\u001b[0m in \u001b[0;36mprepare_train_features\u001b[0;34m(examples)\u001b[0m\n\u001b[1;32m     36\u001b[0m         \u001b[0;31m# One example can give several spans, this is the index of the example containing this span of text.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     37\u001b[0m         \u001b[0msample_index\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msample_mapping\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 38\u001b[0;31m         \u001b[0manswers\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mexamples\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"answers\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0msample_index\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     39\u001b[0m         \u001b[0;31m# If no answers are given, set the cls_index as answer.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     40\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0manswers\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"answer_start\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mTypeError\u001b[0m: list indices must be integers or slices, not str"]}],"source":["features = prepare_train_features(datasets[\"train\"][:5])"]},{"cell_type":"markdown","metadata":{"id":"zS-6iXTkIrJT"},"source":["To apply this function on all the sentences (or pairs of sentences) in our dataset, we just use the `map` method of the `dataset` object we created earlier. This will apply the function on all the elements of all the splits in `dataset`, so our training, validation and testing data will be preprocessed in one single command. Since our preprocessing changes the number of samples, we need to remove the old columns when applying it."]},{"cell_type":"code","source":["tokenizer(example[\"question\" if pad_on_right else \"context\"], example[\"context\" if pad_on_right else \"question\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5Mpr0Jn-F5QV","executionInfo":{"status":"ok","timestamp":1689769344599,"user_tz":-330,"elapsed":4,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"4d6410cc-f6fa-44be-bfcf-26aa77401d66"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'input_ids': [101, 2339, 2106, 2852, 6279, 8447, 3160, 1996, 13633, 1997, 2037, 2280, 6860, 1029, 102, 1000, 12436, 14268, 8737, 25868, 2050, 2056, 1010, 1005, 2059, 1010, 1051, 2332, 1010, 1996, 10478, 2365, 1997, 1038, 11077, 25838, 3900, 3591, 2370, 2077, 2852, 6279, 8447, 1010, 1998, 12786, 2008, 11590, 1010, 2056, 1010, 1005, 2113, 2033, 2005, 15177, 2767, 1012, 1005, 2947, 8280, 2011, 2010, 2767, 1010, 1996, 2365, 1997, 1038, 11077, 2094, 4213, 3900, 1010, 2007, 1037, 6569, 3560, 2540, 1010, 1996, 2935, 1997, 1996, 6090, 18598, 3022, 2001, 5665, 1011, 2583, 2000, 4562, 2008, 4613, 1012, 1996, 2332, 1010, 2046, 9048, 12921, 2007, 1996, 6620, 1997, 7177, 1010, 11016, 2010, 11347, 1999, 14532, 1010, 1998, 2007, 2417, 24589, 2159, 12403, 3489, 2122, 2616, 19662, 2852, 7856, 1010, 1005, 1051, 11655, 13890, 2050, 1010, 15177, 4454, 2003, 20071, 1997, 1037, 2152, 2344, 1010, 27118, 6491, 10875, 2004, 15223, 2360, 4355, 19662, 2033, 1010, 2035, 2006, 1037, 5573, 1010, 2008, 15223, 2396, 2026, 2767, 999, 1051, 15223, 1997, 10634, 25809, 1010, 2307, 5465, 2064, 2196, 2022, 2814, 2007, 2107, 6735, 3238, 1998, 27427, 29206, 2102, 20945, 2015, 2004, 15223, 999, 2009, 2003, 2995, 2045, 2018, 2042, 6860, 2090, 14992, 1998, 2033, 2077, 1010, 2005, 2057, 2020, 2059, 2119, 8053, 25652, 2094, 1012, 2021, 2051, 2008, 17727, 14737, 2705, 2673, 1999, 2049, 2607, 1010, 17727, 14737, 2705, 6860, 2036, 1012, 1999, 2023, 2088, 1010, 6860, 2196, 18094, 2705, 2005, 2412, 1999, 2151, 2540, 1012, 2051, 4929, 11031, 2009, 2125, 1998, 4963, 6033, 11031, 2009, 2205, 1012, 2079, 2025, 6293, 1010, 3568, 1010, 2000, 2008, 6247, 1011, 2125, 6860, 1012, 2228, 2025, 1997, 2009, 2151, 2936, 1012, 1996, 6860, 1045, 2018, 2007, 14992, 1010, 1051, 2034, 1997, 11655, 13890, 3022, 1010, 2001, 2005, 1037, 3327, 3800, 1012, 6860, 2064, 2196, 4942, 6190, 2102, 2090, 1037, 3532, 2158, 1998, 1037, 4138, 2158, 1010, 2090, 1037, 2158, 1997, 4144, 1998, 2019, 4895, 27901, 5596, 2568, 1010, 2090, 1037, 5394, 1998, 1037, 16592, 1012, 2339, 9998, 2102, 15223, 4792, 1996, 9530, 7629, 26620, 1997, 2256, 2280, 6860, 1029, 2045, 2089, 2022, 6860, 2030, 18258, 2090, 5381, 8053, 4350, 2004, 2000, 7177, 2030, 2453, 1012, 1996, 27427, 29206, 2102, 1998, 1996, 22666, 2064, 4445, 2022, 2814, 4496, 26260, 2007, 2169, 2060, 1012, 2028, 1997, 17727, 5397, 4182, 2064, 2196, 2022, 1037, 2767, 2000, 2028, 1997, 5760, 4182, 1025, 2028, 2040, 2003, 2025, 1037, 2482, 1011, 6750, 2064, 2196, 2022, 1037, 2767, 2000, 2028, 2040, 2003, 2061, 1025, 1998, 2028, 2040, 2003, 2025, 1037, 2332, 2196, 2031, 1037, 2332, 2005, 2010, 2767, 1012, 3568, 1010, 2339, 9998, 2102, 15223, 4792, 1996, 9530, 7629, 26620, 1997, 2256, 2280, 6860, 1029, 1005, 102], 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DDtsaJeVIrJT","outputId":"c3c12b88-1639-4380-b28e-61571c99c3d3","executionInfo":{"status":"ok","timestamp":1689484086599,"user_tz":-330,"elapsed":73343,"user":{"displayName":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":17,"referenced_widgets":["02f5c6c0e7b94f2e959bc2d39d2e6ff5","aef7378449074b58a7ad64332b2b607b","08e75b7df4fa40a98a6b2854db47b6fc","0770ecf3003449cfb23caec398871560","f7960d0f9c754500af9082a9c250aa49","830c47c8451643d394b9786c0190d971","fc56ec4d326e46ccba3a84e33e32dca3","f10000b4bb9f4f2384007d93c50e5313","8cb3531777e84a85bab9a7886fc3bc4f","197d3691869540248c1c7cd64a902ed6","73c5bae48e4042d4a54e2c0d8df4f055","acb607ecc12545f4a8dd32a097ef119c","796f90f6dbe14ae4a1e44bfdbd7d11cf","dbea0e50a10540e2b3dbfc60c35c99af","65161e309cee448eaa59f2cc64842326","7ac9bd8c4036406f98e2c2eb9bd418a0","03b374e9cfb84069934963e23e75b57e","b4d0140fe153499f91de206e91a1ed0b","fee1e8c57fd5441693d96b9f7c4f5233","02e819c68ba5436cb5ff1b4dd329c61b","e91c834c8b314706bdb2c185f0069fcd","25a8258589a54d2d9035fb90aaa1f210"]}},"outputs":[{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/87599 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"02f5c6c0e7b94f2e959bc2d39d2e6ff5"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/10570 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"acb607ecc12545f4a8dd32a097ef119c"}},"metadata":{}}],"source":["tokenized_datasets = datasets.map(\n","    prepare_train_features, batched=True, remove_columns=datasets[\"train\"].column_names\n",")"]},{"cell_type":"markdown","metadata":{"id":"voWiw8C7IrJV"},"source":["Even better, the results are automatically cached by the 🤗 Datasets library to avoid spending time on this step the next time you run your notebook. The 🤗 Datasets library is normally smart enough to detect when the function you pass to map has changed (and thus requires to not use the cache data). For instance, it will properly detect if you change the task in the first cell and rerun the notebook. 🤗 Datasets warns you when it uses cached files, you can pass `load_from_cache_file=False` in the call to `map` to not use the cached files and force the preprocessing to be applied again.\n","\n","Note that we passed `batched=True` to encode the texts by batches together. This is to leverage the full benefit of the fast tokenizer we loaded earlier, which will use multi-threading to treat the texts in a batch concurrently."]},{"cell_type":"markdown","metadata":{"id":"545PP3o8IrJV"},"source":["## Fine-tuning the model"]},{"cell_type":"markdown","metadata":{"id":"FBiW8UpKIrJW"},"source":["Now that our data is ready for training, we can download the pretrained model and fine-tune it. Since our task is question answering, we use the `TFAutoModelForQuestionAnswering` class. Like with the tokenizer, the `from_pretrained` method will download and cache the model for us:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"TlqNaB8jIrJW","outputId":"f72ba6ee-234a-4b78-de12-e0c4ed6ddb1a","executionInfo":{"status":"ok","timestamp":1689484095643,"user_tz":-330,"elapsed":9067,"user":{"displayName":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":156,"referenced_widgets":["b54169e8d3be42e1a3d6224a997a03ab","ccf4cc4466004f2c935432fc412b2a07","3227dc4db8f24a3290cb3a2cfcb7e4e1","3e550658ba994d69828f1b9f874b1174","70dfb05bbf28441889f3dedbe43ea0fa","59d12ae0f120458ba8e92e6124ec19c3","59283cb765114df4ae0f1407456209b1","f53e16fad98d4308a1d15948cd248406","8f8b9c06590a4631a5f20ed9a87504fd","a8bf2b1a8a124288a548b8d727141f90","f2cf3fc880c048b1bdde49bea951204b"]}},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading model.safetensors:   0%|          | 0.00/268M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"b54169e8d3be42e1a3d6224a997a03ab"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFDistilBertForQuestionAnswering: ['vocab_projector.bias', 'vocab_transform.weight', 'vocab_layer_norm.weight', 'vocab_transform.bias', 'vocab_layer_norm.bias']\n","- This IS expected if you are initializing TFDistilBertForQuestionAnswering from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFDistilBertForQuestionAnswering from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights or buffers of the TF 2.0 model TFDistilBertForQuestionAnswering were not initialized from the PyTorch model and are newly initialized: ['qa_outputs.weight', 'qa_outputs.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]}],"source":["from transformers import TFAutoModelForQuestionAnswering\n","\n","model = TFAutoModelForQuestionAnswering.from_pretrained(model_checkpoint)"]},{"cell_type":"markdown","metadata":{"id":"CczA5lJlIrJX"},"source":["The warning is telling us we are throwing away some weights (the `vocab_transform` and `vocab_layer_norm` layers) and randomly initializing some other (the `pre_classifier` and `classifier` layers). This is absolutely normal in this case, because we are removing the head used to pretrain the model on a masked language modeling objective and replacing it with a new head for which we don't have pretrained weights, so the library warns us we should fine-tune this model before using it for inference, which is exactly what we are going to do."]},{"cell_type":"markdown","metadata":{"id":"_N8urzhyIrJY"},"source":["To train our model, we will need to define a few more things. The first two arguments are to setup everything so we can push the model to the [Hub](https://huggingface.co/models) at the end of training. Remove the two of them if you didn't follow the installation steps at the top of the notebook, otherwise you can change the value of `push_to_hub_model_id` to something you would prefer.\n","\n","We also tweak the learning rate, use the `batch_size` defined at the top of the notebook and customize the number of epochs for training, as well as the weight decay."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Bliy8zgjIrJY"},"outputs":[],"source":["model_name = model_checkpoint.split(\"/\")[-1]\n","push_to_hub_model_id = f\"{model_name}-finetuned-squad\"\n","learning_rate = 2e-5\n","num_train_epochs = 2\n","weight_decay = 0.01"]},{"cell_type":"markdown","metadata":{"id":"wO8UDf7PiJI8"},"source":["Next, we convert our datasets to `tf.data.Dataset`, which Keras understands natively. There are two ways to do this - we can use the slightly more low-level [`Dataset.to_tf_dataset()`](https://huggingface.co/docs/datasets/package_reference/main_classes#datasets.Dataset.to_tf_dataset) method, or we can use [`Model.prepare_tf_dataset()`](https://huggingface.co/docs/transformers/main_classes/model#transformers.TFPreTrainedModel.prepare_tf_dataset). The main difference between these two is that the `Model` method can inspect the model to determine which column names it can use as input, which means you don't need to specify them yourself. It also supplies a default data collator that will work fine for us, as our samples are already padded to the same length and ready to go."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qqQDx2-TiJI8"},"outputs":[],"source":["train_set = model.prepare_tf_dataset(\n","    tokenized_datasets[\"train\"],\n","    shuffle=True,\n","    batch_size=batch_size,\n",")\n","\n","validation_set = model.prepare_tf_dataset(\n","    tokenized_datasets[\"validation\"],\n","    shuffle=False,\n","    batch_size=batch_size,\n",")"]},{"cell_type":"markdown","metadata":{"id":"89Gr9FofiJI9"},"source":["Next, we can create an optimizer and specify a loss function. The `create_optimizer` function gives us a very solid `AdamW` optimizer with weight decay and a learning rate schedule, but it needs us to compute the number of training steps to build that schedule."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RDxS09FLiJI9"},"outputs":[],"source":["from transformers import create_optimizer\n","\n","total_train_steps = len(train_set) * num_train_epochs\n","\n","optimizer, schedule = create_optimizer(\n","    init_lr=learning_rate, num_warmup_steps=0, num_train_steps=total_train_steps\n",")"]},{"cell_type":"markdown","metadata":{"id":"zprUFmUPiJI9"},"source":["Note that most Transformers models compute loss internally, so we actually don't have to specify anything there! You can of course set your own loss function if you want, but by default our models will choose the 'obvious' loss that matches their task, such as cross-entropy in the case of language modelling. The built-in loss will also correctly handle things like masking the loss on padding tokens, or unlabelled tokens in the case of masked language modelling, so we recommend using it unless you're an advanced user!\n","\n","In addition, because the outputs and loss for this model class are quite straightforward, we can use built-in Keras metrics - these are liable to misbehave in other contexts (for example, they don't know about the masking in masked language modelling) but work well here.\n","\n","We can also use `jit_compile` to compile the model with [XLA](https://www.tensorflow.org/xla). In other cases, we should be careful about that - if our inputs might have variable sequence lengths, we may end up having to do a new XLA compilation for each possible length, because XLA compilation expects a static input shape! In this notebook, however, we have padded all examples to exactly the same length. This makes it perfect for XLA, which will give us a nice performance boost."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hzWtIfogiJI9"},"outputs":[],"source":["import tensorflow as tf\n","\n","model.compile(optimizer=optimizer, jit_compile=True, metrics=[\"accuracy\"])"]},{"cell_type":"markdown","metadata":{"id":"rXuFTAzDIrJe"},"source":["We will evaluate our model and compute metrics in the next section (this is a very long operation, so we will only compute the evaluation loss during training). For now, let's just train our model. We can also add a callback to sync up our model with the Hub - this allows us to resume training from other machines and even test the model's inference quality midway through training! If you don't want to do this, simply remove the callbacks argument in the call to `fit()`."]},{"cell_type":"code","source":["push_to_hub_model_id,"],"metadata":{"id":"4m8KXGRAqDQ4","executionInfo":{"status":"ok","timestamp":1689484143980,"user_tz":-330,"elapsed":630,"user":{"displayName":"","userId":""}},"outputId":"6451e80c-c19b-4fff-f0de-70ef7795b9c9","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('distilbert-base-uncased-finetuned-squad',)"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"imY1oC3SIrJf","executionInfo":{"status":"ok","timestamp":1689491582762,"user_tz":-330,"elapsed":5009577,"user":{"displayName":"","userId":""}},"outputId":"5e3f0b2d-33b4-42e4-e807-8d74800be111","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["Cloning https://huggingface.co/harithapliyal/distilbert-base-uncased-finetuned-squad into local empty directory.\n","WARNING:huggingface_hub.repository:Cloning https://huggingface.co/harithapliyal/distilbert-base-uncased-finetuned-squad into local empty directory.\n"]},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Epoch 1/2\n"]},{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["WARNING:tensorflow:AutoGraph could not transform <function infer_framework at 0x7d51cc46aa70> and will run it as-is.\n","Cause: for/else statement not yet supported\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n"]},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["WARNING: AutoGraph could not transform <function infer_framework at 0x7d51cc46aa70> and will run it as-is.\n","Cause: for/else statement not yet supported\n","To silence this warning, decorate the function with @tf.autograph.experimental.do_not_convert\n","   6/5532 [..............................] - ETA: 53:22 - loss: 5.8729 - end_logits_accuracy: 0.0000e+00 - start_logits_accuracy: 0.0104"]},{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["WARNING:tensorflow:Callback method `on_train_batch_end` is slow compared to the batch time (batch time: 0.0666s vs `on_train_batch_end` time: 0.5675s). Check your callbacks.\n"]},{"output_type":"stream","name":"stdout","text":["5532/5532 [==============================] - 3716s 665ms/step - loss: 1.4910 - end_logits_accuracy: 0.6123 - start_logits_accuracy: 0.5711 - val_loss: 1.1731 - val_end_logits_accuracy: 0.6869 - val_start_logits_accuracy: 0.6507\n","Epoch 2/2\n","5532/5532 [==============================] - 3687s 667ms/step - loss: 0.9661 - end_logits_accuracy: 0.7320 - start_logits_accuracy: 0.6921 - val_loss: 1.1291 - val_end_logits_accuracy: 0.6971 - val_start_logits_accuracy: 0.6623\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7d50b4d52830>"]},"metadata":{},"execution_count":40}],"source":["from transformers.keras_callbacks import PushToHubCallback\n","from tensorflow.keras.callbacks import TensorBoard\n","\n","push_to_hub_callback = PushToHubCallback(\n","    output_dir=\"./qa_model_save\",\n","    tokenizer=tokenizer,\n","    hub_model_id=push_to_hub_model_id,\n",")\n","\n","tensorboard_callback = TensorBoard(log_dir=\"./qa_model_save/logs\")\n","\n","callbacks = [tensorboard_callback, push_to_hub_callback]\n","\n","model.fit(\n","    train_set,\n","    validation_data=validation_set,\n","    epochs=num_train_epochs,\n","    callbacks=callbacks,\n",")"]},{"cell_type":"markdown","metadata":{"id":"tXyRl4IMiJI-"},"source":["## Evaluation"]},{"cell_type":"markdown","metadata":{"id":"jOFULtZ3iJI-"},"source":["Evaluating our model will require a bit more work, as we will need to map the predictions of our model back to parts of the context. The model itself predicts logits for the start and end position of our answers: if we take a batch from our validation dataset, here is the output our model gives us:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"E3xmDuZjiJI-","executionInfo":{"status":"ok","timestamp":1689491593800,"user_tz":-330,"elapsed":5105,"user":{"displayName":"","userId":""}},"outputId":"ecce4554-29a0-42e0-818b-f3c2561b14f8","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["odict_keys(['start_logits', 'end_logits'])"]},"metadata":{},"execution_count":41}],"source":["batch = next(iter(validation_set))\n","output = model.predict_on_batch(batch)\n","output.keys()"]},{"cell_type":"markdown","metadata":{"id":"1SQ3LQgkiJI_"},"source":["The output of the model is a dict-like object that contains the loss (since we provided labels), the start and end logits. We won't need the loss for our predictions, let's have a look a the logits:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LjEODa-DiJI_","executionInfo":{"status":"ok","timestamp":1689491593802,"user_tz":-330,"elapsed":169,"user":{"displayName":"","userId":""}},"outputId":"f9e07c0a-fdbc-4b12-cddb-363940e314ae","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["((16, 384), (16, 384))"]},"metadata":{},"execution_count":42}],"source":["output.start_logits.shape, output.end_logits.shape"]},{"cell_type":"markdown","metadata":{"id":"Dz5rMIqAiJI_"},"source":["We have one logit for each feature and each token. The most obvious thing to predict an answer for each feature is to take the index for the maximum of the start logits as a start position and the index of the maximum of the end logits as an end position."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Zk7lXI9eiJI_","executionInfo":{"status":"ok","timestamp":1689491593804,"user_tz":-330,"elapsed":166,"user":{"displayName":"","userId":""}},"outputId":"d3939808-bfdb-43e9-b872-6b3be357c74a","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([ 46,  57,  78,  43, 118, 108,  72,  35, 108,  34,  73,  41,  80,\n","         91, 156,  35]),\n"," array([ 47,  58,  81,  44, 118, 110,  75,  37, 110,  36,  76,  42,  83,\n","         94, 158,  35]))"]},"metadata":{},"execution_count":43}],"source":["import numpy as np\n","\n","np.argmax(output.start_logits, -1), np.argmax(output.end_logits, -1)"]},{"cell_type":"markdown","metadata":{"id":"W6fA_eQ0iJJA"},"source":["This will work great in a lot of cases, but what if this prediction gives us something impossible: the start position could be greater than the end position, or point to a span of text in the question instead of the answer. In that case, we might want to look at the second best prediction to see if it gives a possible answer and select that instead.\n","\n","However, picking the second best answer is not as easy as picking the best one: is it the second best index in the start logits with the best index in the end logits? Or the best index in the start logits with the second best index in the end logits? And if that second best answer is not possible either, it gets even trickier for the third best answer.\n","\n","\n","To classify our answers, we will use the score obtained by adding the start and end logits. We won't try to order all the possible answers and limit ourselves to with a hyper-parameter we call `n_best_size`. We'll pick the best indices in the start and end logits and gather all the answers this predicts. After checking if each one is valid, we will sort them by their score and keep the best one. Here is how we would do this on the first feature in the batch:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"YarOWQq4iJJA"},"outputs":[],"source":["n_best_size = 20"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_jflRH6biJJA"},"outputs":[],"source":["import numpy as np\n","\n","start_logits = output.start_logits[0]\n","end_logits = output.end_logits[0]\n","# Gather the indices the best start/end logits:\n","start_indexes = np.argsort(start_logits)[-1 : -n_best_size - 1 : -1].tolist()\n","end_indexes = np.argsort(end_logits)[-1 : -n_best_size - 1 : -1].tolist()\n","valid_answers = []\n","for start_index in start_indexes:\n","    for end_index in end_indexes:\n","        if (\n","            start_index <= end_index\n","        ):  # We need to refine that test to check the answer is inside the context\n","            valid_answers.append(\n","                {\n","                    \"score\": start_logits[start_index] + end_logits[end_index],\n","                    \"text\": \"\",  # We need to find a way to get back the original substring corresponding to the answer in the context\n","                }\n","            )"]},{"cell_type":"markdown","metadata":{"id":"JUdjhzYkiJJA"},"source":["And then we can sort the `valid_answers` according to their `score` and only keep the best one. The only point left is how to check a given span is inside the context (and not the question) and how to get back the text inside. To do this, we need to add two things to our validation features:\n","- the ID of the example that generated the feature (since each example can generate several features, as seen before);\n","- the offset mapping that will give us a map from token indices to character positions in the context.\n","\n","That's why we will re-process the validation set with the following function, slightly different from `prepare_train_features`:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wBVx5xz-iJJB"},"outputs":[],"source":["def prepare_validation_features(examples):\n","    # Tokenize our examples with truncation and maybe padding, but keep the overflows using a stride. This results\n","    # in one example possible giving several features when a context is long, each of those features having a\n","    # context that overlaps a bit the context of the previous feature.\n","    tokenized_examples = tokenizer(\n","        examples[\"question\" if pad_on_right else \"context\"],\n","        examples[\"context\" if pad_on_right else \"question\"],\n","        truncation=\"only_second\" if pad_on_right else \"only_first\",\n","        max_length=max_length,\n","        stride=doc_stride,\n","        return_overflowing_tokens=True,\n","        return_offsets_mapping=True,\n","        padding=\"max_length\",\n","    )\n","\n","    # Since one example might give us several features if it has a long context, we need a map from a feature to\n","    # its corresponding example. This key gives us just that.\n","    sample_mapping = tokenized_examples.pop(\"overflow_to_sample_mapping\")\n","\n","    # We keep the example_id that gave us this feature and we will store the offset mappings.\n","    tokenized_examples[\"example_id\"] = []\n","\n","    for i in range(len(tokenized_examples[\"input_ids\"])):\n","        # Grab the sequence corresponding to that example (to know what is the context and what is the question).\n","        sequence_ids = tokenized_examples.sequence_ids(i)\n","        context_index = 1 if pad_on_right else 0\n","\n","        # One example can give several spans, this is the index of the example containing this span of text.\n","        sample_index = sample_mapping[i]\n","        tokenized_examples[\"example_id\"].append(examples[\"id\"][sample_index])\n","\n","        # Set to None the offset_mapping that are not part of the context so it's easy to determine if a token\n","        # position is part of the context or not.\n","        tokenized_examples[\"offset_mapping\"][i] = [\n","            (o if sequence_ids[k] == context_index else None)\n","            for k, o in enumerate(tokenized_examples[\"offset_mapping\"][i])\n","        ]\n","\n","    return tokenized_examples"]},{"cell_type":"markdown","metadata":{"id":"i0Xb3lfViJJB"},"source":["And like before, we can apply that function to our validation set easily:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JUmOPYntiJJB","executionInfo":{"status":"ok","timestamp":1689491609486,"user_tz":-330,"elapsed":15840,"user":{"displayName":"","userId":""}},"outputId":"af26ff7c-dda9-4116-82f9-5ceca174be9e","colab":{"base_uri":"https://localhost:8080/","height":17,"referenced_widgets":["23b977ba9d47478ab36a4143d1530f5d","3e1b1234c268418e87071bc5781987c9","e876486c07e2406b8611b10e7bbe6370","f1e74a1ce008493da33083a5e8df3c19","725b6ac99a7141f1a3b6f2a098e2baaa","53463b096e154d7c9d2fa8d732608b73","e6bc36269f6e41458319a035f4d496e9","113b626a7e1b422a889b48bfbdf78d93","7199039513044f01bf6c504b3b60fc7a","99920a5468394bc4b80de595647787b4","63eb419e0cdc49c9b992a3931f15d2f1"]}},"outputs":[{"output_type":"display_data","data":{"text/plain":["Map:   0%|          | 0/10570 [00:00<?, ? examples/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"23b977ba9d47478ab36a4143d1530f5d"}},"metadata":{}}],"source":["validation_features = datasets[\"validation\"].map(\n","    prepare_validation_features,\n","    batched=True,\n","    remove_columns=datasets[\"validation\"].column_names,\n",")"]},{"cell_type":"markdown","metadata":{"id":"crqgqGKDiJJC"},"source":["And turn the dataset into a `tf.data.Dataset` as before."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4Y1oVfceiJJC"},"outputs":[],"source":["validation_dataset = model.prepare_tf_dataset(\n","     validation_features,\n","     shuffle=False,\n","     batch_size=batch_size,\n",")"]},{"cell_type":"markdown","metadata":{"id":"IWFILasPiJJC"},"source":["Now we can grab the predictions for all features by using the `model.predict` method:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VsktT7A-iJJD","executionInfo":{"status":"ok","timestamp":1689491818379,"user_tz":-330,"elapsed":207073,"user":{"displayName":"","userId":""}},"outputId":"d54c0e7a-fa68-4962-b8e2-3b7ed59bc1c0","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["674/674 [==============================] - 156s 214ms/step\n"]}],"source":["raw_predictions = model.predict(validation_dataset)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sBLii4vmiJJD","executionInfo":{"status":"ok","timestamp":1689491818385,"user_tz":-330,"elapsed":92,"user":{"displayName":"","userId":""}},"outputId":"b0aac8ff-639e-4718-87f5-ea5276df3712","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["TFQuestionAnsweringModelOutput(loss=None, start_logits=array([[-7.882228 , -8.394502 , -8.348806 , ..., -9.186795 , -9.179071 ,\n","        -9.200337 ],\n","       [-7.818928 , -8.350349 , -8.295164 , ..., -9.185888 , -9.178325 ,\n","        -9.199629 ],\n","       [-6.127174 , -6.7919397, -8.322329 , ..., -9.168938 , -9.179094 ,\n","        -9.199493 ],\n","       ...,\n","       [-6.4598947, -7.2825494, -8.591179 , ..., -8.927893 , -8.971095 ,\n","        -8.999603 ],\n","       [-5.0492015, -6.823743 , -7.363707 , ..., -8.92808  , -8.935282 ,\n","        -8.974424 ],\n","       [-5.540022 , -7.8745694, -8.47113  , ..., -8.944174 , -8.985218 ,\n","        -8.996642 ]], dtype=float32), end_logits=array([[-7.743069 , -8.609324 , -8.38954  , ..., -9.132535 , -9.143895 ,\n","        -9.120572 ],\n","       [-7.61265  , -8.5491905, -8.330519 , ..., -9.134668 , -9.145827 ,\n","        -9.122722 ],\n","       [-6.071269 , -8.071878 , -8.448293 , ..., -9.086205 , -9.088095 ,\n","        -9.075475 ],\n","       ...,\n","       [-6.6643734, -8.819154 , -8.67416  , ..., -9.259237 , -9.2460575,\n","        -9.251721 ],\n","       [-5.31112  , -8.639483 , -7.289831 , ..., -9.085145 , -9.122682 ,\n","        -9.124002 ],\n","       [-5.78611  , -8.013688 , -8.314304 , ..., -9.112565 , -9.109767 ,\n","        -9.135453 ]], dtype=float32), hidden_states=None, attentions=None)"]},"metadata":{},"execution_count":50}],"source":["raw_predictions"]},{"cell_type":"markdown","metadata":{"id":"pUHvN1mOiJJD"},"source":["We can now refine the test we had before: since we set `None` in the offset mappings when it corresponds to a part of the question, it's easy to check if an answer is fully inside the context. We also eliminate very long answers from our considerations (with an hyper-parameter we can tune)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2AzOGkhciJJE"},"outputs":[],"source":["max_answer_length = 30"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xnEsTVcniJJE","executionInfo":{"status":"ok","timestamp":1689491818389,"user_tz":-330,"elapsed":80,"user":{"displayName":"","userId":""}},"outputId":"593aca50-b5b8-43b1-8780-af686e4ac09e","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["[{'score': 16.128923, 'text': 'Denver Broncos'},\n"," {'score': 14.4007015,\n","  'text': 'Denver Broncos defeated the National Football Conference (NFC) champion Carolina Panthers'},\n"," {'score': 11.992004, 'text': 'Carolina Panthers'},\n"," {'score': 11.66073, 'text': 'Broncos'},\n"," {'score': 11.569322, 'text': 'Denver'},\n"," {'score': 10.375718,\n","  'text': 'American Football Conference (AFC) champion Denver Broncos'},\n"," {'score': 10.172118,\n","  'text': 'The American Football Conference (AFC) champion Denver Broncos'},\n"," {'score': 9.932509,\n","  'text': 'Broncos defeated the National Football Conference (NFC) champion Carolina Panthers'},\n"," {'score': 9.594528,\n","  'text': 'Denver Broncos defeated the National Football Conference'},\n"," {'score': 9.281356,\n","  'text': 'Denver Broncos defeated the National Football Conference (NFC)'},\n"," {'score': 9.032974,\n","  'text': 'Denver Broncos defeated the National Football Conference (NFC'},\n"," {'score': 8.718055,\n","  'text': 'Denver Broncos defeated the National Football Conference (NFC) champion Carolina Panthers 24–10'},\n"," {'score': 8.647497,\n","  'text': 'American Football Conference (AFC) champion Denver Broncos defeated the National Football Conference (NFC) champion Carolina Panthers'},\n"," {'score': 8.443897,\n","  'text': 'The American Football Conference (AFC) champion Denver Broncos defeated the National Football Conference (NFC) champion Carolina Panthers'},\n"," {'score': 8.107039,\n","  'text': 'Denver Broncos defeated the National Football Conference (NFC) champion Carolina'},\n"," {'score': 7.3309755, 'text': 'Panthers'},\n"," {'score': 7.0370884,\n","  'text': 'Denver Broncos defeated the National Football Conference (NFC) champion'},\n"," {'score': 6.98995, 'text': 'champion Denver Broncos'},\n"," {'score': 6.9301443,\n","  'text': 'Denver Broncos defeated the National Football Conference (NFC) champion Carolina Panthers 24–10 to earn their third Super Bowl title.'},\n"," {'score': 6.3932557,\n","  'text': 'National Football Conference (NFC) champion Carolina Panthers'}]"]},"metadata":{},"execution_count":52}],"source":["start_logits = output.start_logits[0]\n","end_logits = output.end_logits[0]\n","offset_mapping = validation_features[0][\"offset_mapping\"]\n","# The first feature comes from the first example. For the more general case, we will need to be match the example_id to\n","# an example index\n","context = datasets[\"validation\"][0][\"context\"]\n","\n","# Gather the indices the best start/end logits:\n","start_indexes = np.argsort(start_logits)[-1 : -n_best_size - 1 : -1].tolist()\n","end_indexes = np.argsort(end_logits)[-1 : -n_best_size - 1 : -1].tolist()\n","valid_answers = []\n","for start_index in start_indexes:\n","    for end_index in end_indexes:\n","        # Don't consider out-of-scope answers, either because the indices are out of bounds or correspond\n","        # to part of the input_ids that are not in the context.\n","        if (\n","            start_index >= len(offset_mapping)\n","            or end_index >= len(offset_mapping)\n","            or offset_mapping[start_index] is None\n","            or offset_mapping[end_index] is None\n","        ):\n","            continue\n","        # Don't consider answers with a length that is either < 0 or > max_answer_length.\n","        if end_index < start_index or end_index - start_index + 1 > max_answer_length:\n","            continue\n","        if (\n","            start_index <= end_index\n","        ):  # We need to refine that test to check the answer is inside the context\n","            start_char = offset_mapping[start_index][0]\n","            end_char = offset_mapping[end_index][1]\n","            valid_answers.append(\n","                {\n","                    \"score\": start_logits[start_index] + end_logits[end_index],\n","                    \"text\": context[start_char:end_char],\n","                }\n","            )\n","\n","valid_answers = sorted(valid_answers, key=lambda x: x[\"score\"], reverse=True)[\n","    :n_best_size\n","]\n","valid_answers"]},{"cell_type":"markdown","metadata":{"id":"o2VpD1ZTiJJE"},"source":["We can compare to the actual ground-truth answer:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"26ztIHxziJJE","executionInfo":{"status":"ok","timestamp":1689491818390,"user_tz":-330,"elapsed":73,"user":{"displayName":"","userId":""}},"outputId":"212af9f9-e9ef-4943-f7d1-f055033986a0","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'text': ['Denver Broncos', 'Denver Broncos', 'Denver Broncos'],\n"," 'answer_start': [177, 177, 177]}"]},"metadata":{},"execution_count":53}],"source":["datasets[\"validation\"][0][\"answers\"]"]},{"cell_type":"markdown","metadata":{"id":"19uSh_gkiJJF"},"source":["Our model's most likely answer is correct!\n","\n","As we mentioned in the code above, this was easy on the first feature because we knew it comes from the first example. For the other features, we will need a map between examples and their corresponding features. Also, since one example can give several features, we will need to gather together all the answers in all the features generated by a given example, then pick the best one. The following code builds a map from example index to its corresponding features indices:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xpUZNGadiJJF"},"outputs":[],"source":["import collections\n","\n","examples = datasets[\"validation\"]\n","features = validation_features\n","\n","example_id_to_index = {k: i for i, k in enumerate(examples[\"id\"])}\n","features_per_example = collections.defaultdict(list)\n","for i, feature in enumerate(features):\n","    features_per_example[example_id_to_index[feature[\"example_id\"]]].append(i)"]},{"cell_type":"markdown","metadata":{"id":"2Hg4kF8giJJF"},"source":["We're almost ready for our post-processing function. The last bit to deal with is the impossible answer (when `squad_v2 = True`). The code above only keeps answers that are inside the context, we need to also grab the score for the impossible answer (which has start and end indices corresponding to the index of the CLS token). When one example gives several features, we have to predict the impossible answer when all the features give a high score to the impossible answer (since one feature could predict the impossible answer just because the answer isn't in the part of the context it has access too), which is why the score of the impossible answer for one example is the *minimum* of the scores for the impossible answer in each feature generated by the example.\n","\n","We then predict the impossible answer when that score is greater than the score of the best non-impossible answer. All combined together, this gives us this post-processing function:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ms30STrFiJJG"},"outputs":[],"source":["from tqdm.auto import tqdm\n","\n","def postprocess_qa_predictions(\n","    examples,\n","    features,\n","    all_start_logits,\n","    all_end_logits,\n","    n_best_size=20,\n","    max_answer_length=30,\n","):\n","    # Build a map example to its corresponding features.\n","    example_id_to_index = {k: i for i, k in enumerate(examples[\"id\"])}\n","    features_per_example = collections.defaultdict(list)\n","    for i, feature in enumerate(features):\n","        features_per_example[example_id_to_index[feature[\"example_id\"]]].append(i)\n","\n","    # The dictionaries we have to fill.\n","    predictions = collections.OrderedDict()\n","\n","    # Logging.\n","    print(\n","        f\"Post-processing {len(examples)} example predictions split into {len(features)} features.\"\n","    )\n","\n","    # Let's loop over all the examples!\n","    for example_index, example in enumerate(tqdm(examples)):\n","        # Those are the indices of the features associated to the current example.\n","        feature_indices = features_per_example[example_index]\n","\n","        min_null_score = None  # Only used if squad_v2 is True.\n","        valid_answers = []\n","\n","        context = example[\"context\"]\n","        # Looping through all the features associated to the current example.\n","        for feature_index in feature_indices:\n","            # We grab the predictions of the model for this feature.\n","            start_logits = all_start_logits[feature_index]\n","            end_logits = all_end_logits[feature_index]\n","            # This is what will allow us to map some the positions in our logits to span of texts in the original\n","            # context.\n","            offset_mapping = features[feature_index][\"offset_mapping\"]\n","\n","            # Update minimum null prediction.\n","            cls_index = features[feature_index][\"input_ids\"].index(\n","                tokenizer.cls_token_id\n","            )\n","            feature_null_score = start_logits[cls_index] + end_logits[cls_index]\n","            if min_null_score is None or min_null_score < feature_null_score:\n","                min_null_score = feature_null_score\n","\n","            # Go through all possibilities for the `n_best_size` greater start and end logits.\n","            start_indexes = np.argsort(start_logits)[\n","                -1 : -n_best_size - 1 : -1\n","            ].tolist()\n","            end_indexes = np.argsort(end_logits)[-1 : -n_best_size - 1 : -1].tolist()\n","            for start_index in start_indexes:\n","                for end_index in end_indexes:\n","                    # Don't consider out-of-scope answers, either because the indices are out of bounds or correspond\n","                    # to part of the input_ids that are not in the context.\n","                    if (\n","                        start_index >= len(offset_mapping)\n","                        or end_index >= len(offset_mapping)\n","                        or not offset_mapping[start_index]\n","                        or not offset_mapping[end_index]\n","                    ):\n","                        continue\n","                    # Don't consider answers with a length that is either < 0 or > max_answer_length.\n","                    if (\n","                        end_index < start_index\n","                        or end_index - start_index + 1 > max_answer_length\n","                    ):\n","                        continue\n","                    start_char = offset_mapping[start_index][0]\n","                    end_char = offset_mapping[end_index][1]\n","                    valid_answers.append(\n","                        {\n","                            \"score\": start_logits[start_index] + end_logits[end_index],\n","                            \"text\": context[start_char:end_char],\n","                        }\n","                    )\n","\n","        if len(valid_answers) > 0:\n","            best_answer = sorted(valid_answers, key=lambda x: x[\"score\"], reverse=True)[\n","                0\n","            ]\n","        else:\n","            # In the very rare edge case we have not a single non-null prediction, we create a fake prediction to avoid\n","            # failure.\n","            best_answer = {\"text\": \"\", \"score\": 0.0}\n","\n","        # Let's pick our final answer: the best one or the null answer (only for squad_v2)\n","        if not squad_v2:\n","            predictions[example[\"id\"]] = best_answer[\"text\"]\n","        else:\n","            answer = (\n","                best_answer[\"text\"] if best_answer[\"score\"] > min_null_score else \"\"\n","            )\n","            predictions[example[\"id\"]] = answer\n","\n","    return predictions"]},{"cell_type":"markdown","metadata":{"id":"i-NpaPWKiJJG"},"source":["And we can apply our post-processing function to our raw predictions:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"UtVrC8ytiJJG","executionInfo":{"status":"ok","timestamp":1689491874375,"user_tz":-330,"elapsed":42852,"user":{"displayName":"","userId":""}},"outputId":"c6bc3f00-0336-4e83-8ba6-fbe8b6238e2a","colab":{"base_uri":"https://localhost:8080/","height":66,"referenced_widgets":["40f6dfc3e7dc4281a5c03398240b8211","114a457d72fb4a48b6f42e95873d1e29","2aecbdbc735f404ab0327e51876827c4","14d084653a0042a2997446de5a1bbd05","2fc705c5d4a1442b832c0b8e1a5dbf16","0fa8365ebf9b4b9198df17f30df8be6a","340d2c9f269d437985f68cafe9ac84b0","884ca56dc9e94efa9b8ac971bb07c905","98a84b9f76834afaa48807ad3341857d","ee441d59ec1149fa82e6f236a065ae2b","bea6d10b24664d3a9150b092ef0b584f"]}},"outputs":[{"output_type":"stream","name":"stdout","text":["Post-processing 10570 example predictions split into 10784 features.\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/10570 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"40f6dfc3e7dc4281a5c03398240b8211"}},"metadata":{}}],"source":["final_predictions = postprocess_qa_predictions(\n","    datasets[\"validation\"],\n","    validation_features,\n","    raw_predictions[\"start_logits\"],\n","    raw_predictions[\"end_logits\"],\n",")"]},{"cell_type":"markdown","metadata":{"id":"ZLXDsPIViJJH"},"source":["Then we can load the metric from the datasets library."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZjYFr7cViJJH","executionInfo":{"status":"ok","timestamp":1689491876436,"user_tz":-330,"elapsed":2115,"user":{"displayName":"","userId":""}},"outputId":"0a69dc9f-8574-4392-c866-29c9b2dd380e","colab":{"base_uri":"https://localhost:8080/","height":136,"referenced_widgets":["2ec901c4827d4835ac26e4f285d4ebdd","814d074d39d7467bb04035d4737f7397","93643c7ca2124f8c88e967371b5153b1","dd2b807797f641a0a4e848aa925f1dde","3a9da9413175408b8a52d979202418da","214699cfacdd417c9cb41d00fb8880af","c9356a66d16045b695d7c4b0dafaf4d7","fd5aeb58a3fd418c849e4b654b044cce","43d97dd456694d5d8bd270f8a7b84c5f","7dec9dda6c38477d963aba9bfb8b6d84","f6bce4d0ca9848e69a1575e73d7eeb5b","d3022435662148b1973a8b4c1fefdf45","f68eec24de944923ae03275a0d0e4301","30b034d563d3490dbafdf34453024136","5a0778e5b0a64a87ab2f6951cdcc35e3","a751c60c6a224cc4b251f22cdb9f64bd","d902585e85e94489a9f3f72c2e47d59f","47aeb82be4c942efb2ce92ecd3105a63","beb9e3523f9144ee8536ce69d8c751f4","46d55665a92247179d81bb59ea0cb6e9","aef9b07c74a445a38bf3333c021ee8ff","02c2984031fe4515ae35af272dbb1072"]}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-57-69495f532713>:1: FutureWarning: load_metric is deprecated and will be removed in the next major version of datasets. Use 'evaluate.load' instead, from the new library 🤗 Evaluate: https://huggingface.co/docs/evaluate\n","  metric = load_metric(\"squad_v2\" if squad_v2 else \"squad\")\n"]},{"output_type":"display_data","data":{"text/plain":["Downloading builder script:   0%|          | 0.00/1.72k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2ec901c4827d4835ac26e4f285d4ebdd"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading extra modules:   0%|          | 0.00/1.11k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d3022435662148b1973a8b4c1fefdf45"}},"metadata":{}}],"source":["metric = load_metric(\"squad_v2\" if squad_v2 else \"squad\")"]},{"cell_type":"markdown","metadata":{"id":"WOR81aQ3iJJH"},"source":["Then we can call compute on it. We just need to format predictions and labels a bit as it expects a list of dictionaries and not one big dictionary. In the case of squad_v2, we also have to set a `no_answer_probability` argument (which we set to 0.0 here as we have already set the answer to empty if we picked it)."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cABStwXYiJJH","executionInfo":{"status":"ok","timestamp":1689491879734,"user_tz":-330,"elapsed":3340,"user":{"displayName":"","userId":""}},"outputId":"b12b18a0-4f50-4dcc-e41f-a6cdcac790db","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'exact_match': 76.02649006622516, 'f1': 84.63685381461846}"]},"metadata":{},"execution_count":58}],"source":["if squad_v2:\n","    formatted_predictions = [\n","        {\"id\": k, \"prediction_text\": v, \"no_answer_probability\": 0.0}\n","        for k, v in final_predictions.items()\n","    ]\n","else:\n","    formatted_predictions = [\n","        {\"id\": k, \"prediction_text\": v} for k, v in final_predictions.items()\n","    ]\n","references = [\n","    {\"id\": ex[\"id\"], \"answers\": ex[\"answers\"]} for ex in datasets[\"validation\"]\n","]\n","metric.compute(predictions=formatted_predictions, references=references)"]},{"cell_type":"markdown","metadata":{"id":"LixxqzzriJJH"},"source":["If you ran the callback above, you can now share this model with all your friends, family or favorite pets: they can all load it with the identifier `\"your-username/the-name-you-picked\"` so for instance:\n","\n","```python\n","from transformers import TFAutoModelForQuestionAnswering\n","\n","model = TFAutoModelForQuestionAnswering.from_pretrained(\"your-username/my-awesome-model\")\n","```"]},{"cell_type":"markdown","metadata":{"id":"jV0vax-SiJJI"},"source":["## Inference"]},{"cell_type":"markdown","metadata":{"id":"b2xCjVEtiJJI"},"source":["Now we've trained our model, let's see how we could load it and use it to answer questions in future! First, let's load it from the hub. This means we can resume the code from here without needing to rerun everything above every time."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WRTv8H25iJJI","executionInfo":{"status":"ok","timestamp":1689491903144,"user_tz":-330,"elapsed":23450,"user":{"displayName":"","userId":""}},"outputId":"32efd071-04d9-4bd6-a93b-c90ce2cf5846","colab":{"base_uri":"https://localhost:8080/","height":316,"referenced_widgets":["48404106a32949b986b4a9eb5c5cc5c8","f1f9a0d1ee854b8f81369bfae786200d","98f796a5b45a495da91e0e1b8b53639c","9c280c1f1e0c42e4b28689c31e98cdcb","246077f2f98846d08936d61cff5fec13","0cc194a8f58440598df6f8dcdc407c21","779becb4a01c4df3ab98574422fa9d3f","4a10c5e944da4d53a31ba4ff94dae83f","72f73f4f66474579846e22a96ac8f9a4","7b3b55edbc3b4a57913901f8af61a39a","3400add50a234313bab472d15d52de18","96bf153fa15e4241a576c58c2b9c06f2","a849f1a6d8f641d5a2d1af0155ba2d60","40c94843ec344c999baaf2c5826a04b3","674ec2111a0b40ce8b22b912da45eed8","d3a9111e8ebe49ef9446c32ff3cdafec","727f5919f3df409cb822024e2b0a1636","a1f1bd4fc84d4c3f9524a1d1b16ec408","8ee49f242d7f42e3a564c57e0a6b43dd","6e5c83efb29f494fa32e6d7e1b7a0024","564a02fafe81452088be7d7dac708f90","9f5d55e67dd84d7a92bbb1235d490670","4e0fcca3ce9d4f8cbcdd2f08a4e99945","96fe1d5bd6bb4d1ea48c795bf9081716","b309b7dd97b345d58f8995485051c1e0","dce728b45fcf4fb2bcb070c698943cdb","4f553852d9b9435190c221244b87b604","70b6f0ddb1de4723ba7859ae65efb4b3","64a621b2481d45d5bd09abf48c1fbe9e","7c41a82163d24334b406ffcf97c77d1c","ff004fd562e944ab888a86c38ff0495c","041e67c9c7bc4de39e191492a67567d4","fe9f59f194a34baa9abf2d76ff1b5b3f","0378a3ae59c74219ba8bb22eb90add70","5bfc17edee044d37ac15a6229d69d90a","8783798907e740a789be1113760042bc","353b61e38ff942f4bfb9b20c6b723ad2","2e12050c0fda4cf3b709a628673d0e97","ca08ac5c720a4152ba14cdb3d852b4a9","2097a3cee0c047e88c1e20eb6b48c63b","ce6077013ab24c0a970e58b572d6aa52","61e24cd2c03e4db1a6f2b2c6394f6002","98a1ae45edfb4dbcb919ba20c4128fc5","7066327fb7bb4cb1842158e04caa20f0","05df48c02106437796feac7eadd49373","a41682ecbb8c475391e3996f7918c935","2cd3e39431d2481d8b14d46ba011a9fd","5d4f1347cc684ecdbec00d1f82008ba2","b611a3f033154925a5c40d20510c37e1","44d5467f31e543469cc959e9b0028d7e","90054728665843cfa3d7c3b4f0768dee","941b8e49c76441008c68dd2d04cf8e6a","ecd22680248742278807c403d43b65b2","e59672d541fe4c7f9aa2813742796529","420e38035e2043d589d36c8285251954","973c33be61a341fe8e6e6a3e4ce86c84","12071c1eedf746258dba2ba491976253","b7414c3e60ae4d9ba19ddc5d5983f322","5e805d9018e34ed6a8ade8c506a20734","a78722c97752446299647b77b2b4f65a","2ff09213c2bd412fba7f701b1234ea02","2eaab7e1275449579bcee99d32ccd860","da762bb1c69e4b048784a0c0457f2bb0","2ca4e730223444c0bc3b51877e7997f5","8f7f112584a74e9897c55183b1c10089","a7c2fbd563874928a8acb62235dc7710"]}},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading (…)lve/main/config.json:   0%|          | 0.00/538 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"48404106a32949b986b4a9eb5c5cc5c8"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading tf_model.h5:   0%|          | 0.00/266M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"96bf153fa15e4241a576c58c2b9c06f2"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some layers from the model checkpoint at Rocketknight1/distilbert-base-uncased-finetuned-squad were not used when initializing TFDistilBertForQuestionAnswering: ['dropout_19']\n","- This IS expected if you are initializing TFDistilBertForQuestionAnswering from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFDistilBertForQuestionAnswering from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some layers of TFDistilBertForQuestionAnswering were not initialized from the model checkpoint at Rocketknight1/distilbert-base-uncased-finetuned-squad and are newly initialized: ['dropout_39']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"output_type":"display_data","data":{"text/plain":["Downloading (…)okenizer_config.json:   0%|          | 0.00/360 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"4e0fcca3ce9d4f8cbcdd2f08a4e99945"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)solve/main/vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"0378a3ae59c74219ba8bb22eb90add70"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)/main/tokenizer.json:   0%|          | 0.00/712k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"05df48c02106437796feac7eadd49373"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)cial_tokens_map.json:   0%|          | 0.00/125 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"973c33be61a341fe8e6e6a3e4ce86c84"}},"metadata":{}}],"source":["from transformers import AutoTokenizer, TFAutoModelForQuestionAnswering\n","\n","# You can, of course, use your own username and model name here\n","# once you've pushed your model using the code above!\n","checkpoint = \"Rocketknight1/distilbert-base-uncased-finetuned-squad\"\n","model = TFAutoModelForQuestionAnswering.from_pretrained(checkpoint)\n","tokenizer = AutoTokenizer.from_pretrained(checkpoint)"]},{"cell_type":"markdown","metadata":{"id":"7mL2-BW7iJJI"},"source":["Now, let's get some sample text and ask a question. Feel free to substitute your own text and question!"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bS1jw2TViJJI"},"outputs":[],"source":["context = \"\"\"The dominant sequence transduction models are based on complex recurrent or convolutional\n","neural networks in an encoder-decoder configuration. The best performing models also connect the encoder\n","and decoder through an attention mechanism. We propose a new simple network architecture, the Transformer,\n","based solely on attention mechanisms, dispensing with recurrence and convolutions entirely. Experiments on\n","two machine translation tasks show these models to be superior in quality while being more parallelizable\n","and requiring significantly less time to train.\"\"\"\n","question = \"What kind of mechanisms is Transformer based on?\"\n","\n","inputs = tokenizer([context], [question], return_tensors=\"np\")\n","\n","outputs = model(inputs)"]},{"cell_type":"markdown","metadata":{"id":"FwH1aLTJiJJI"},"source":["The outputs are logits, so let's use argmax to find the largest logit, which represents the model's best guess for the right answer."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8auPmSfFiJJJ","executionInfo":{"status":"ok","timestamp":1689491903148,"user_tz":-330,"elapsed":116,"user":{"displayName":"","userId":""}},"outputId":"45b92355-a3d7-465b-fdb3-2cb3147466fa","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stdout","text":["64\n","65\n","[ 3086 10595]\n"]}],"source":["start_position = np.argmax(outputs.start_logits[0])\n","end_position = np.argmax(outputs.end_logits[0])\n","print(start_position)\n","print(end_position)\n","\n","# Extract this substring from the inputs\n","answer = inputs[\"input_ids\"][0, start_position: end_position + 1]\n","print(answer)"]},{"cell_type":"markdown","metadata":{"id":"vXRqDzY9iJJJ"},"source":["Well, these are definitely tokens. Let's decode them back to text:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_Yo1kpJ7iJJJ","executionInfo":{"status":"ok","timestamp":1689491903149,"user_tz":-330,"elapsed":115,"user":{"displayName":"","userId":""}},"outputId":"d7113e04-378e-48a4-d2d9-9ef8c7aa9287","colab":{"base_uri":"https://localhost:8080/","height":35}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'attention mechanisms'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":62}],"source":["tokenizer.decode(answer)"]},{"cell_type":"markdown","metadata":{"id":"aKd_OZauiJJJ"},"source":["## Pipeline API"]},{"cell_type":"markdown","metadata":{"id":"x0uqQlRQiJJJ"},"source":["An alternative way to quickly perform inference with any model on the hub is to use the [Pipeline API](https://huggingface.co/docs/transformers/main_classes/pipelines), which abstracts away all the steps we did manually above. It will perform the preprocessing, forward pass and postprocessing all in a single object.\n","\n","Let's showcase this for our trained model:"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"VYj-8a-LiJJJ","executionInfo":{"status":"ok","timestamp":1689491905676,"user_tz":-330,"elapsed":2641,"user":{"displayName":"","userId":""}},"outputId":"bd271e9e-6ef4-45c7-af8c-cc2351da7afa","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"stream","name":"stderr","text":["Some layers from the model checkpoint at Rocketknight1/distilbert-base-uncased-finetuned-squad were not used when initializing TFDistilBertForQuestionAnswering: ['dropout_19']\n","- This IS expected if you are initializing TFDistilBertForQuestionAnswering from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing TFDistilBertForQuestionAnswering from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some layers of TFDistilBertForQuestionAnswering were not initialized from the model checkpoint at Rocketknight1/distilbert-base-uncased-finetuned-squad and are newly initialized: ['dropout_59']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]}],"source":["from transformers import pipeline\n","\n","question_answerer = pipeline(\"question-answering\",  \"Rocketknight1/distilbert-base-uncased-finetuned-squad\", framework=\"tf\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sQhyv0OaiJJK","executionInfo":{"status":"ok","timestamp":1689491905677,"user_tz":-330,"elapsed":25,"user":{"displayName":"","userId":""}},"outputId":"82fd0c01-7c35-4496-e907-18fb28e849e9","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'score': 0.5348116755485535,\n"," 'start': 320,\n"," 'end': 340,\n"," 'answer': 'attention mechanisms'}"]},"metadata":{},"execution_count":64}],"source":["question_answerer(context=context, question=question)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PzQ6-DnKiJJK"},"outputs":[],"source":[]},{"cell_type":"markdown","source":["# Calling Huggingface Pushed Model."],"metadata":{"id":"J4rf7h_LVnNz"}},{"cell_type":"code","source":["! pip install transformers datasets huggingface_hub"],"metadata":{"id":"YI4H8dB3Vznk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!pip install gradio"],"metadata":{"id":"RK4biVxqVvpm"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Space Gradio"],"metadata":{"id":"tVbbiy5yWqT3"}},{"cell_type":"code","source":["import gradio as gr\n","\n","gr.Interface.load(\"models/harithapliyal/distilbert-base-uncased-finetuned-squad\").launch()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":668},"id":"Ek8wFg9MVmtZ","executionInfo":{"status":"ok","timestamp":1689504972827,"user_tz":-330,"elapsed":2473,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"a98c52a7-a16d-44f2-849e-67cac534310a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-3-85249e164c84>:3: GradioDeprecationWarning: gr.Interface.load() will be deprecated. Use gr.load() instead.\n","  gr.Interface.load(\"models/harithapliyal/distilbert-base-uncased-finetuned-squad\").launch()\n"]},{"output_type":"stream","name":"stdout","text":["Fetching model from: https://huggingface.co/harithapliyal/distilbert-base-uncased-finetuned-squad\n","Colab notebook detected. To show errors in colab notebook, set debug=True in launch()\n","Note: opening Chrome Inspector may crash demo inside Colab notebooks.\n","\n","To create a public link, set `share=True` in `launch()`.\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["(async (port, path, width, height, cache, element) => {\n","                        if (!google.colab.kernel.accessAllowed && !cache) {\n","                            return;\n","                        }\n","                        element.appendChild(document.createTextNode(''));\n","                        const url = await google.colab.kernel.proxyPort(port, {cache});\n","\n","                        const external_link = document.createElement('div');\n","                        external_link.innerHTML = `\n","                            <div style=\"font-family: monospace; margin-bottom: 0.5rem\">\n","                                Running on <a href=${new URL(path, url).toString()} target=\"_blank\">\n","                                    https://localhost:${port}${path}\n","                                </a>\n","                            </div>\n","                        `;\n","                        element.appendChild(external_link);\n","\n","                        const iframe = document.createElement('iframe');\n","                        iframe.src = new URL(path, url).toString();\n","                        iframe.height = height;\n","                        iframe.allow = \"autoplay; camera; microphone; clipboard-read; clipboard-write;\"\n","                        iframe.width = width;\n","                        iframe.style.border = 0;\n","                        element.appendChild(iframe);\n","                    })(7860, \"/\", \"100%\", 500, false, window.element)"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":[]},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["#API Method"],"metadata":{"id":"N_Z6LuYFV-qr"}},{"cell_type":"code","source":["import requests\n","\n","API_URL = \"https://api-inference.huggingface.co/models/harithapliyal/distilbert-base-uncased-finetuned-squad\"\n","headers = {\"Authorization\": \"Bearer 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\"}\n","\n","def query(payload):\n","\tresponse = requests.post(API_URL, headers=headers, json=payload)\n","\treturn response.json()\n","\n","output = query({\n","\t\"inputs\": {\n","\t\t\"question\": \"What's my name?\",\n","\t\t\"context\": \"My name is Clara and I live in Berkeley.\"\n","\t},\n","})\n","\n","output"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CwCWft_0WB2R","executionInfo":{"status":"ok","timestamp":1689505323694,"user_tz":-330,"elapsed":633,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"082d5c2d-10a4-4aa5-b346-1d2c5b60dc5c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'score': 0.9725878834724426, 'start': 11, 'end': 16, 'answer': 'Clara'}"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["context =\"\"\"Om! Having bowed down to Narayana and Nara, the most exalted male being, and also to the goddess Saraswati, must the word Jaya be uttered.\n","Ugrasrava, the son of Lomaharshana, surnamed Sauti, well-versed in the Puranas, bending with humility, one day approached the great sages of rigid vows, sitting at their ease, who had attended the twelve years' sacrifice of Saunaka, surnamed Kulapati, in the forest of Naimisha. Those ascetics, wishing to hear his wonderful narrations, presently began to address him who had thus arrived at that recluse abode of the inhabitants of the forest of Naimisha. Having been entertained with due respect by those holy men, he saluted those Munis (sages) with joined palms, even all of them, and inquired about the progress of their asceticism. Then all the ascetics being again seated, the son of Lomaharshana humbly occupied the seat that was assigned to him. Seeing that he was comfortably seated, and recovered from fatigue, one of the Rishis beginning the conversation, asked him, 'Whence comest thou, O lotus-eyed Sauti, and where hast thou spent the time? Tell me, who ask thee, in detail.'\n","Accomplished in speech, Sauti, thus questioned, gave in the midst of that big assemblage of contemplative Munis a full and proper answer in words consonant with their mode of life.\n","\"Sauti said, 'Having heard the diverse sacred and wonderful stories which were composed in his Mahabharata by Krishna-Dwaipayana, and which were recited in full by Vaisampayana at the Snake-sacrifice of the high-souled royal sage Janamejaya and in the presence also of that chief of Princes, the son of Parikshit, and having wandered about, visiting many sacred waters and holy shrines, I journeyed to the country venerated by the Dwijas (twice-born) and called Samantapanchaka where formerly was fought the battle between the children of Kuru and Pandu, and all the chiefs of the land ranged on either side. Thence, anxious to see you, I am come into your presence. Ye reverend sages, all of whom are to me as Brahma; ye greatly blessed who shine in this place of sacrifice with the splendour of the solar fire: ye who have concluded the silent meditations and have fed the holy fire; and yet who are sitting--without care, what, O ye Dwijas (twice-born), shall I repeat, shall I recount the sacred stories collected in the Puranas containing precepts of religious duty and of worldly profit, or the acts of illustrious saints and sovereigns of mankind?\" \"The Rishi replied, 'The Purana, first promulgated by the great Rishi Dwaipayana, and which after having been heard both by the gods and the Brahmarshis was highly esteemed, being the most eminent narrative that exists, diversified both in diction and division, possessing subtile meanings logically combined, and gleaned from the Vedas, is a sacred work. Composed in elegant language, it includeth the subjects of other books. It is elucidated by other Shastras, and comprehendeth the sense of the four Vedas. We are desirous of hearing that history also called Bharata, the holy composition of the wonderful Vyasa, which dispelleth the fear of evil, just as it was cheerfully recited by the Rishi Vaisampayana, under the direction of Dwaipayana himself, at the snake-sacrifice of Raja Janamejaya?'\n","\"Sauti then said, 'Having bowed down to the primordial being Isana, to whom multitudes make offerings, and who is adored by the multitude; who is the true incorruptible one, Brahma, perceptible, imperceptible, eternal; who is both a non-existing and an existing-non-existing being; who is the universe and also distinct from the existing and non-existing universe; who is the creator of high and low; the ancient, exalted, inexhaustible one; who is Vishnu, beneficent and the beneficence itself, worthy of all preference, pure and immaculate; who is Hari, the ruler of the faculties, the guide of all things moveable and immoveable; I will declare the sacred thoughts of the illustrious sage Vyasa, of marvellous deeds and worshipped here by all. Some bards have already published this history, some are now teaching it, and others, in like manner, will hereafter promulgate it upon the earth. It is a great source of knowledge, established throughout the three regions of the world. It is possessed by the twice-born both in detailed and compendious forms. It is the delight of the learned for being embellished with elegant expressions, conversations human and divine, and a variety of poetical measures.\n","In this world, when it was destitute of brightness and light, and enveloped all around in total darkness, there came into being, as the primal cause of creation, a mighty egg, the one inexhaustible seed of all created beings. It is called Mahadivya, and was formed at the beginning of the Yuga, in which we are told, was the true light Brahma, the eternal one, the wonderful and inconceivable being present alike in all places; the invisible and subtile cause, whose nature partaketh of entity and non-entity. From this egg came out the lord Pitamaha Brahma, the one only Prajapati; with Suraguru and Sthanu. Then appeared the twenty-one Prajapatis, viz., Manu, Vasishtha and Parameshthi; ten Prachetas, Daksha, and the seven sons of Daksha. Then appeared the man of inconceivable nature whom all the Rishis know and so the Viswe-devas, the Adityas, the Vasus, and the twin Aswins; the Yakshas, the Sadhyas, the Pisachas, the Guhyakas, and the Pitris. After these were produced the wise and most holy Brahmarshis, and the numerous Rajarshis distinguished by every noble quality. So the water, the heavens, the earth, the air, the sky, the points of the heavens, the years, the seasons, the months, the fortnights, called Pakshas, with day and night in due succession. And thus were produced all things which are known to mankind.\"\"\""],"metadata":{"id":"JXlrEpPLXBG2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["question= \"Who composed the Mahabharata and recited it at the snake-sacrifice of Raja Janamejaya?\""],"metadata":{"id":"yfM2XUKZXIhG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import requests\n","\n","API_URL = \"https://api-inference.huggingface.co/models/harithapliyal/distilbert-base-uncased-finetuned-squad\"\n","headers = {\"Authorization\": \"Bearer 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\"}\n","\n","def query(payload):\n","\tresponse = requests.post(API_URL, headers=headers, json=payload)\n","\treturn response.json()\n","\n","output = query({\n","\t\"inputs\": {\n","\t\t\"question\": question,\n","\t\t\"context\": context\n","\t},\n","})\n","\n","output"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4Uzf7Cd7W75B","executionInfo":{"status":"ok","timestamp":1689505308663,"user_tz":-330,"elapsed":1726,"user":{"displayName":"Hari Thapliyaal","userId":"09088303666341280217"}},"outputId":"d48f3d65-c19d-49d1-85c8-8eb59f725e91"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'score': 0.8302440643310547,\n"," 'start': 1421,\n"," 'end': 1439,\n"," 'answer': 'Krishna-Dwaipayana'}"]},"metadata":{},"execution_count":8}]}],"metadata":{"colab":{"provenance":[{"file_id":"1LneN0jCDjawqbvzKp6qxhtBSevShYLYZ","timestamp":1689765607317},{"file_id":"https://github.com/huggingface/notebooks/blob/main/examples/question_answering-tf.ipynb","timestamp":1689492813580}],"gpuType":"T4"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.3"},"widgets":{"application/vnd.jupyter.widget-state+json":{"02f5c6c0e7b94f2e959bc2d39d2e6ff5":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_aef7378449074b58a7ad64332b2b607b","IPY_MODEL_08e75b7df4fa40a98a6b2854db47b6fc","IPY_MODEL_0770ecf3003449cfb23caec398871560"],"layout":"IPY_MODEL_f7960d0f9c754500af9082a9c250aa49"}},"aef7378449074b58a7ad64332b2b607b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_830c47c8451643d394b9786c0190d971","placeholder":"​","style":"IPY_MODEL_fc56ec4d326e46ccba3a84e33e32dca3","value":"Map: 100%"}},"08e75b7df4fa40a98a6b2854db47b6fc":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_f10000b4bb9f4f2384007d93c50e5313","max":87599,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8cb3531777e84a85bab9a7886fc3bc4f","value":87599}},"0770ecf3003449cfb23caec398871560":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_197d3691869540248c1c7cd64a902ed6","placeholder":"​","style":"IPY_MODEL_73c5bae48e4042d4a54e2c0d8df4f055","value":" 87599/87599 [01:06&lt;00:00, 902.67 examples/s]"}},"f7960d0f9c754500af9082a9c250aa49":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"830c47c8451643d394b9786c0190d971":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fc56ec4d326e46ccba3a84e33e32dca3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f10000b4bb9f4f2384007d93c50e5313":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8cb3531777e84a85bab9a7886fc3bc4f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"197d3691869540248c1c7cd64a902ed6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"73c5bae48e4042d4a54e2c0d8df4f055":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"acb607ecc12545f4a8dd32a097ef119c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_796f90f6dbe14ae4a1e44bfdbd7d11cf","IPY_MODEL_dbea0e50a10540e2b3dbfc60c35c99af","IPY_MODEL_65161e309cee448eaa59f2cc64842326"],"layout":"IPY_MODEL_7ac9bd8c4036406f98e2c2eb9bd418a0"}},"796f90f6dbe14ae4a1e44bfdbd7d11cf":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_03b374e9cfb84069934963e23e75b57e","placeholder":"​","style":"IPY_MODEL_b4d0140fe153499f91de206e91a1ed0b","value":"Map: 100%"}},"dbea0e50a10540e2b3dbfc60c35c99af":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_fee1e8c57fd5441693d96b9f7c4f5233","max":10570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_02e819c68ba5436cb5ff1b4dd329c61b","value":10570}},"65161e309cee448eaa59f2cc64842326":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e91c834c8b314706bdb2c185f0069fcd","placeholder":"​","style":"IPY_MODEL_25a8258589a54d2d9035fb90aaa1f210","value":" 10570/10570 [00:07&lt;00:00, 1502.15 examples/s]"}},"7ac9bd8c4036406f98e2c2eb9bd418a0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"03b374e9cfb84069934963e23e75b57e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b4d0140fe153499f91de206e91a1ed0b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fee1e8c57fd5441693d96b9f7c4f5233":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"02e819c68ba5436cb5ff1b4dd329c61b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e91c834c8b314706bdb2c185f0069fcd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"25a8258589a54d2d9035fb90aaa1f210":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b54169e8d3be42e1a3d6224a997a03ab":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ccf4cc4466004f2c935432fc412b2a07","IPY_MODEL_3227dc4db8f24a3290cb3a2cfcb7e4e1","IPY_MODEL_3e550658ba994d69828f1b9f874b1174"],"layout":"IPY_MODEL_70dfb05bbf28441889f3dedbe43ea0fa"}},"ccf4cc4466004f2c935432fc412b2a07":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_59d12ae0f120458ba8e92e6124ec19c3","placeholder":"​","style":"IPY_MODEL_59283cb765114df4ae0f1407456209b1","value":"Downloading model.safetensors: 100%"}},"3227dc4db8f24a3290cb3a2cfcb7e4e1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f53e16fad98d4308a1d15948cd248406","max":267954768,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8f8b9c06590a4631a5f20ed9a87504fd","value":267954768}},"3e550658ba994d69828f1b9f874b1174":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a8bf2b1a8a124288a548b8d727141f90","placeholder":"​","style":"IPY_MODEL_f2cf3fc880c048b1bdde49bea951204b","value":" 268M/268M [00:00&lt;00:00, 342MB/s]"}},"70dfb05bbf28441889f3dedbe43ea0fa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"59d12ae0f120458ba8e92e6124ec19c3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"59283cb765114df4ae0f1407456209b1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f53e16fad98d4308a1d15948cd248406":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8f8b9c06590a4631a5f20ed9a87504fd":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a8bf2b1a8a124288a548b8d727141f90":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f2cf3fc880c048b1bdde49bea951204b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"23b977ba9d47478ab36a4143d1530f5d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3e1b1234c268418e87071bc5781987c9","IPY_MODEL_e876486c07e2406b8611b10e7bbe6370","IPY_MODEL_f1e74a1ce008493da33083a5e8df3c19"],"layout":"IPY_MODEL_725b6ac99a7141f1a3b6f2a098e2baaa"}},"3e1b1234c268418e87071bc5781987c9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_53463b096e154d7c9d2fa8d732608b73","placeholder":"​","style":"IPY_MODEL_e6bc36269f6e41458319a035f4d496e9","value":"Map: 100%"}},"e876486c07e2406b8611b10e7bbe6370":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"","description":"","description_tooltip":null,"layout":"IPY_MODEL_113b626a7e1b422a889b48bfbdf78d93","max":10570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7199039513044f01bf6c504b3b60fc7a","value":10570}},"f1e74a1ce008493da33083a5e8df3c19":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_99920a5468394bc4b80de595647787b4","placeholder":"​","style":"IPY_MODEL_63eb419e0cdc49c9b992a3931f15d2f1","value":" 10570/10570 [00:15&lt;00:00, 598.09 examples/s]"}},"725b6ac99a7141f1a3b6f2a098e2baaa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":"hidden","width":null}},"53463b096e154d7c9d2fa8d732608b73":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e6bc36269f6e41458319a035f4d496e9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"113b626a7e1b422a889b48bfbdf78d93":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7199039513044f01bf6c504b3b60fc7a":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"99920a5468394bc4b80de595647787b4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"63eb419e0cdc49c9b992a3931f15d2f1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"40f6dfc3e7dc4281a5c03398240b8211":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_114a457d72fb4a48b6f42e95873d1e29","IPY_MODEL_2aecbdbc735f404ab0327e51876827c4","IPY_MODEL_14d084653a0042a2997446de5a1bbd05"],"layout":"IPY_MODEL_2fc705c5d4a1442b832c0b8e1a5dbf16"}},"114a457d72fb4a48b6f42e95873d1e29":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0fa8365ebf9b4b9198df17f30df8be6a","placeholder":"​","style":"IPY_MODEL_340d2c9f269d437985f68cafe9ac84b0","value":"100%"}},"2aecbdbc735f404ab0327e51876827c4":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_884ca56dc9e94efa9b8ac971bb07c905","max":10570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_98a84b9f76834afaa48807ad3341857d","value":10570}},"14d084653a0042a2997446de5a1bbd05":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ee441d59ec1149fa82e6f236a065ae2b","placeholder":"​","style":"IPY_MODEL_bea6d10b24664d3a9150b092ef0b584f","value":" 10570/10570 [00:31&lt;00:00, 372.73it/s]"}},"2fc705c5d4a1442b832c0b8e1a5dbf16":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0fa8365ebf9b4b9198df17f30df8be6a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"340d2c9f269d437985f68cafe9ac84b0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"884ca56dc9e94efa9b8ac971bb07c905":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"98a84b9f76834afaa48807ad3341857d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ee441d59ec1149fa82e6f236a065ae2b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bea6d10b24664d3a9150b092ef0b584f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2ec901c4827d4835ac26e4f285d4ebdd":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_814d074d39d7467bb04035d4737f7397","IPY_MODEL_93643c7ca2124f8c88e967371b5153b1","IPY_MODEL_dd2b807797f641a0a4e848aa925f1dde"],"layout":"IPY_MODEL_3a9da9413175408b8a52d979202418da"}},"814d074d39d7467bb04035d4737f7397":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_214699cfacdd417c9cb41d00fb8880af","placeholder":"​","style":"IPY_MODEL_c9356a66d16045b695d7c4b0dafaf4d7","value":"Downloading builder script: "}},"93643c7ca2124f8c88e967371b5153b1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_fd5aeb58a3fd418c849e4b654b044cce","max":1715,"min":0,"orientation":"horizontal","style":"IPY_MODEL_43d97dd456694d5d8bd270f8a7b84c5f","value":1715}},"dd2b807797f641a0a4e848aa925f1dde":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7dec9dda6c38477d963aba9bfb8b6d84","placeholder":"​","style":"IPY_MODEL_f6bce4d0ca9848e69a1575e73d7eeb5b","value":" 4.50k/? [00:00&lt;00:00, 156kB/s]"}},"3a9da9413175408b8a52d979202418da":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"214699cfacdd417c9cb41d00fb8880af":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c9356a66d16045b695d7c4b0dafaf4d7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fd5aeb58a3fd418c849e4b654b044cce":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"43d97dd456694d5d8bd270f8a7b84c5f":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7dec9dda6c38477d963aba9bfb8b6d84":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f6bce4d0ca9848e69a1575e73d7eeb5b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d3022435662148b1973a8b4c1fefdf45":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f68eec24de944923ae03275a0d0e4301","IPY_MODEL_30b034d563d3490dbafdf34453024136","IPY_MODEL_5a0778e5b0a64a87ab2f6951cdcc35e3"],"layout":"IPY_MODEL_a751c60c6a224cc4b251f22cdb9f64bd"}},"f68eec24de944923ae03275a0d0e4301":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d902585e85e94489a9f3f72c2e47d59f","placeholder":"​","style":"IPY_MODEL_47aeb82be4c942efb2ce92ecd3105a63","value":"Downloading extra modules: "}},"30b034d563d3490dbafdf34453024136":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_beb9e3523f9144ee8536ce69d8c751f4","max":1109,"min":0,"orientation":"horizontal","style":"IPY_MODEL_46d55665a92247179d81bb59ea0cb6e9","value":1109}},"5a0778e5b0a64a87ab2f6951cdcc35e3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_aef9b07c74a445a38bf3333c021ee8ff","placeholder":"​","style":"IPY_MODEL_02c2984031fe4515ae35af272dbb1072","value":" 3.30k/? [00:00&lt;00:00, 118kB/s]"}},"a751c60c6a224cc4b251f22cdb9f64bd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d902585e85e94489a9f3f72c2e47d59f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"47aeb82be4c942efb2ce92ecd3105a63":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"beb9e3523f9144ee8536ce69d8c751f4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"46d55665a92247179d81bb59ea0cb6e9":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"aef9b07c74a445a38bf3333c021ee8ff":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"02c2984031fe4515ae35af272dbb1072":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"48404106a32949b986b4a9eb5c5cc5c8":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f1f9a0d1ee854b8f81369bfae786200d","IPY_MODEL_98f796a5b45a495da91e0e1b8b53639c","IPY_MODEL_9c280c1f1e0c42e4b28689c31e98cdcb"],"layout":"IPY_MODEL_246077f2f98846d08936d61cff5fec13"}},"f1f9a0d1ee854b8f81369bfae786200d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0cc194a8f58440598df6f8dcdc407c21","placeholder":"​","style":"IPY_MODEL_779becb4a01c4df3ab98574422fa9d3f","value":"Downloading (…)lve/main/config.json: 100%"}},"98f796a5b45a495da91e0e1b8b53639c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4a10c5e944da4d53a31ba4ff94dae83f","max":538,"min":0,"orientation":"horizontal","style":"IPY_MODEL_72f73f4f66474579846e22a96ac8f9a4","value":538}},"9c280c1f1e0c42e4b28689c31e98cdcb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7b3b55edbc3b4a57913901f8af61a39a","placeholder":"​","style":"IPY_MODEL_3400add50a234313bab472d15d52de18","value":" 538/538 [00:00&lt;00:00, 36.2kB/s]"}},"246077f2f98846d08936d61cff5fec13":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0cc194a8f58440598df6f8dcdc407c21":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"779becb4a01c4df3ab98574422fa9d3f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4a10c5e944da4d53a31ba4ff94dae83f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"72f73f4f66474579846e22a96ac8f9a4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7b3b55edbc3b4a57913901f8af61a39a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3400add50a234313bab472d15d52de18":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"96bf153fa15e4241a576c58c2b9c06f2":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a849f1a6d8f641d5a2d1af0155ba2d60","IPY_MODEL_40c94843ec344c999baaf2c5826a04b3","IPY_MODEL_674ec2111a0b40ce8b22b912da45eed8"],"layout":"IPY_MODEL_d3a9111e8ebe49ef9446c32ff3cdafec"}},"a849f1a6d8f641d5a2d1af0155ba2d60":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_727f5919f3df409cb822024e2b0a1636","placeholder":"​","style":"IPY_MODEL_a1f1bd4fc84d4c3f9524a1d1b16ec408","value":"Downloading tf_model.h5: 100%"}},"40c94843ec344c999baaf2c5826a04b3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8ee49f242d7f42e3a564c57e0a6b43dd","max":265583688,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6e5c83efb29f494fa32e6d7e1b7a0024","value":265583688}},"674ec2111a0b40ce8b22b912da45eed8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_564a02fafe81452088be7d7dac708f90","placeholder":"​","style":"IPY_MODEL_9f5d55e67dd84d7a92bbb1235d490670","value":" 266M/266M [00:16&lt;00:00, 17.8MB/s]"}},"d3a9111e8ebe49ef9446c32ff3cdafec":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"727f5919f3df409cb822024e2b0a1636":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a1f1bd4fc84d4c3f9524a1d1b16ec408":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8ee49f242d7f42e3a564c57e0a6b43dd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6e5c83efb29f494fa32e6d7e1b7a0024":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"564a02fafe81452088be7d7dac708f90":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9f5d55e67dd84d7a92bbb1235d490670":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4e0fcca3ce9d4f8cbcdd2f08a4e99945":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_96fe1d5bd6bb4d1ea48c795bf9081716","IPY_MODEL_b309b7dd97b345d58f8995485051c1e0","IPY_MODEL_dce728b45fcf4fb2bcb070c698943cdb"],"layout":"IPY_MODEL_4f553852d9b9435190c221244b87b604"}},"96fe1d5bd6bb4d1ea48c795bf9081716":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_70b6f0ddb1de4723ba7859ae65efb4b3","placeholder":"​","style":"IPY_MODEL_64a621b2481d45d5bd09abf48c1fbe9e","value":"Downloading (…)okenizer_config.json: 100%"}},"b309b7dd97b345d58f8995485051c1e0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7c41a82163d24334b406ffcf97c77d1c","max":360,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ff004fd562e944ab888a86c38ff0495c","value":360}},"dce728b45fcf4fb2bcb070c698943cdb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_041e67c9c7bc4de39e191492a67567d4","placeholder":"​","style":"IPY_MODEL_fe9f59f194a34baa9abf2d76ff1b5b3f","value":" 360/360 [00:00&lt;00:00, 30.3kB/s]"}},"4f553852d9b9435190c221244b87b604":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"70b6f0ddb1de4723ba7859ae65efb4b3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"64a621b2481d45d5bd09abf48c1fbe9e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7c41a82163d24334b406ffcf97c77d1c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ff004fd562e944ab888a86c38ff0495c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"041e67c9c7bc4de39e191492a67567d4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fe9f59f194a34baa9abf2d76ff1b5b3f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0378a3ae59c74219ba8bb22eb90add70":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_5bfc17edee044d37ac15a6229d69d90a","IPY_MODEL_8783798907e740a789be1113760042bc","IPY_MODEL_353b61e38ff942f4bfb9b20c6b723ad2"],"layout":"IPY_MODEL_2e12050c0fda4cf3b709a628673d0e97"}},"5bfc17edee044d37ac15a6229d69d90a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ca08ac5c720a4152ba14cdb3d852b4a9","placeholder":"​","style":"IPY_MODEL_2097a3cee0c047e88c1e20eb6b48c63b","value":"Downloading (…)solve/main/vocab.txt: 100%"}},"8783798907e740a789be1113760042bc":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ce6077013ab24c0a970e58b572d6aa52","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_61e24cd2c03e4db1a6f2b2c6394f6002","value":231508}},"353b61e38ff942f4bfb9b20c6b723ad2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_98a1ae45edfb4dbcb919ba20c4128fc5","placeholder":"​","style":"IPY_MODEL_7066327fb7bb4cb1842158e04caa20f0","value":" 232k/232k [00:00&lt;00:00, 545kB/s]"}},"2e12050c0fda4cf3b709a628673d0e97":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ca08ac5c720a4152ba14cdb3d852b4a9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2097a3cee0c047e88c1e20eb6b48c63b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ce6077013ab24c0a970e58b572d6aa52":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"61e24cd2c03e4db1a6f2b2c6394f6002":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"98a1ae45edfb4dbcb919ba20c4128fc5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7066327fb7bb4cb1842158e04caa20f0":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"05df48c02106437796feac7eadd49373":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a41682ecbb8c475391e3996f7918c935","IPY_MODEL_2cd3e39431d2481d8b14d46ba011a9fd","IPY_MODEL_5d4f1347cc684ecdbec00d1f82008ba2"],"layout":"IPY_MODEL_b611a3f033154925a5c40d20510c37e1"}},"a41682ecbb8c475391e3996f7918c935":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_44d5467f31e543469cc959e9b0028d7e","placeholder":"​","style":"IPY_MODEL_90054728665843cfa3d7c3b4f0768dee","value":"Downloading (…)/main/tokenizer.json: 100%"}},"2cd3e39431d2481d8b14d46ba011a9fd":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_941b8e49c76441008c68dd2d04cf8e6a","max":711661,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ecd22680248742278807c403d43b65b2","value":711661}},"5d4f1347cc684ecdbec00d1f82008ba2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e59672d541fe4c7f9aa2813742796529","placeholder":"​","style":"IPY_MODEL_420e38035e2043d589d36c8285251954","value":" 712k/712k [00:00&lt;00:00, 1.11MB/s]"}},"b611a3f033154925a5c40d20510c37e1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"44d5467f31e543469cc959e9b0028d7e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"90054728665843cfa3d7c3b4f0768dee":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"941b8e49c76441008c68dd2d04cf8e6a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ecd22680248742278807c403d43b65b2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e59672d541fe4c7f9aa2813742796529":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"420e38035e2043d589d36c8285251954":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"973c33be61a341fe8e6e6a3e4ce86c84":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_12071c1eedf746258dba2ba491976253","IPY_MODEL_b7414c3e60ae4d9ba19ddc5d5983f322","IPY_MODEL_5e805d9018e34ed6a8ade8c506a20734"],"layout":"IPY_MODEL_a78722c97752446299647b77b2b4f65a"}},"12071c1eedf746258dba2ba491976253":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2ff09213c2bd412fba7f701b1234ea02","placeholder":"​","style":"IPY_MODEL_2eaab7e1275449579bcee99d32ccd860","value":"Downloading (…)cial_tokens_map.json: 100%"}},"b7414c3e60ae4d9ba19ddc5d5983f322":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_da762bb1c69e4b048784a0c0457f2bb0","max":125,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2ca4e730223444c0bc3b51877e7997f5","value":125}},"5e805d9018e34ed6a8ade8c506a20734":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8f7f112584a74e9897c55183b1c10089","placeholder":"​","style":"IPY_MODEL_a7c2fbd563874928a8acb62235dc7710","value":" 125/125 [00:00&lt;00:00, 6.63kB/s]"}},"a78722c97752446299647b77b2b4f65a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2ff09213c2bd412fba7f701b1234ea02":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2eaab7e1275449579bcee99d32ccd860":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"da762bb1c69e4b048784a0c0457f2bb0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2ca4e730223444c0bc3b51877e7997f5":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8f7f112584a74e9897c55183b1c10089":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a7c2fbd563874928a8acb62235dc7710":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7d1cf3be4f5448e299d6ae8f1585cabb":{"model_module":"@jupyter-widgets/controls","model_name":"VBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"VBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"VBoxView","box_style":"","children":["IPY_MODEL_632abb46c08842f3b2fcc9302f63468b","IPY_MODEL_bda8c23e5c82448c8a953676b15a2e50","IPY_MODEL_0dfa80b12b724ed9b0eb2ae4600fa120","IPY_MODEL_20747f7e659042f484a3aa4390ccca09"],"layout":"IPY_MODEL_5e84654302b944e2b75a18ae9cae1817"}},"b6d0d8ff36a64171a28465b6bcff34a8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_79c52a0f14404b8f80b052a8ca3d9c5d","placeholder":"​","style":"IPY_MODEL_259ee940829e4544a8d1f975aa9427e9","value":"<center> <img\nsrc=https://huggingface.co/front/assets/huggingface_logo-noborder.svg\nalt='Hugging Face'> <br> Copy a token from <a\nhref=\"https://huggingface.co/settings/tokens\" target=\"_blank\">your Hugging Face\ntokens page</a> and paste it below. <br> Immediately click login after copying\nyour token or it might be stored in plain text in this notebook file. </center>"}},"96b225f0ce7b48309cf1167e3aa86a80":{"model_module":"@jupyter-widgets/controls","model_name":"PasswordModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"PasswordModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"PasswordView","continuous_update":true,"description":"Token:","description_tooltip":null,"disabled":false,"layout":"IPY_MODEL_b77fbe87743f40ff84afe72664cd9643","placeholder":"​","style":"IPY_MODEL_861910a192d54a228fe1f3e54b425410","value":""}},"8ec8f9ed3efe4a6ab1e66836ca62231b":{"model_module":"@jupyter-widgets/controls","model_name":"CheckboxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"CheckboxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"CheckboxView","description":"Add token as git credential?","description_tooltip":null,"disabled":false,"indent":true,"layout":"IPY_MODEL_ac01855fd90f4c93ae99e132441c6b46","style":"IPY_MODEL_56ab1839cc544573bf582e7d62418852","value":true}},"5a226cda4d7e497ba94c7ac3bb4c9af3":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ButtonView","button_style":"","description":"Login","disabled":false,"icon":"","layout":"IPY_MODEL_b43d7e22d3b7466b81b61c98c88fc9f7","style":"IPY_MODEL_f1ebf9e74f5d490cb761e6b7578ec5b7","tooltip":""}},"2738f26d7f4c4904acb7b2c1997e5eb7":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d7d9e5155f8348e89a93faf6e623202b","placeholder":"​","style":"IPY_MODEL_dbaf9c834a3f4ccb8c451a731c870d90","value":"\n<b>Pro Tip:</b> If you don't already have one, you can create a dedicated\n'notebooks' token with 'write' access, that you can then easily reuse for all\nnotebooks. </center>"}},"5e84654302b944e2b75a18ae9cae1817":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":"center","align_self":null,"border":null,"bottom":null,"display":"flex","flex":null,"flex_flow":"column","grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"50%"}},"79c52a0f14404b8f80b052a8ca3d9c5d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"259ee940829e4544a8d1f975aa9427e9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b77fbe87743f40ff84afe72664cd9643":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"861910a192d54a228fe1f3e54b425410":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ac01855fd90f4c93ae99e132441c6b46":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"56ab1839cc544573bf582e7d62418852":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b43d7e22d3b7466b81b61c98c88fc9f7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f1ebf9e74f5d490cb761e6b7578ec5b7":{"model_module":"@jupyter-widgets/controls","model_name":"ButtonStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ButtonStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","button_color":null,"font_weight":""}},"d7d9e5155f8348e89a93faf6e623202b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dbaf9c834a3f4ccb8c451a731c870d90":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0c3e474fdfcf442290ee1f10eff207a8":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"LabelModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"LabelView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1aa8b0a1a0a54a9d92ee334993f3ed03","placeholder":"​","style":"IPY_MODEL_ff76c74d75214b50a1dde5b74af76300","value":"Connecting..."}},"1aa8b0a1a0a54a9d92ee334993f3ed03":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ff76c74d75214b50a1dde5b74af76300":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"632abb46c08842f3b2fcc9302f63468b":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"LabelModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"LabelView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bf99519225c249218a158a5eb85e703f","placeholder":"​","style":"IPY_MODEL_3867b713ead54a54a52f083893dd970b","value":"Token is valid (permission: write)."}},"bda8c23e5c82448c8a953676b15a2e50":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"LabelModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"LabelView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6e774bfef2f342119063aab76b222290","placeholder":"​","style":"IPY_MODEL_c25aac7c1a6243c0b9c6aa9891238d7b","value":"Your token has been saved in your configured git credential helpers (store)."}},"0dfa80b12b724ed9b0eb2ae4600fa120":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"LabelModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"LabelView","description":"","description_tooltip":null,"layout":"IPY_MODEL_60f5cf0b0fb645b38f35b080c12185dd","placeholder":"​","style":"IPY_MODEL_f933f89993bc43a498149ed8a33caa1d","value":"Your token has been saved to /root/.cache/huggingface/token"}},"20747f7e659042f484a3aa4390ccca09":{"model_module":"@jupyter-widgets/controls","model_name":"LabelModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"LabelModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"LabelView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ff76229a3a344a26b2956ec404df7663","placeholder":"​","style":"IPY_MODEL_31455c2480124bbfa726f296cebe3dea","value":"Login successful"}},"bf99519225c249218a158a5eb85e703f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3867b713ead54a54a52f083893dd970b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6e774bfef2f342119063aab76b222290":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c25aac7c1a6243c0b9c6aa9891238d7b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"60f5cf0b0fb645b38f35b080c12185dd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f933f89993bc43a498149ed8a33caa1d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ff76229a3a344a26b2956ec404df7663":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"31455c2480124bbfa726f296cebe3dea":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"60c1a72a6309442c97d51d649ab538e2":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f4c1383043a842399ab6f95e24ce4274","IPY_MODEL_6138be1543af46ca8f4c6ead54ee0fdb","IPY_MODEL_fc0591546a454164be3f02dc49b9c57a"],"layout":"IPY_MODEL_c5566239a6e548fb99a99536ceeac56c"}},"f4c1383043a842399ab6f95e24ce4274":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7f62e8dce08d400abaa3eb1c798a98a9","placeholder":"​","style":"IPY_MODEL_5bfcd9395a174a15891dd502e5747551","value":"Downloading (…)okenizer_config.json: 100%"}},"6138be1543af46ca8f4c6ead54ee0fdb":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e4d0d6422a4b4bc58d70ab69c1dc32c3","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_1b560a8855b24fcea182113b8d0534a2","value":28}},"fc0591546a454164be3f02dc49b9c57a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a4748fb2d83c414f904b569f0f20f355","placeholder":"​","style":"IPY_MODEL_f1536e2e972d41238738d6ea3ec16319","value":" 28.0/28.0 [00:00&lt;00:00, 1.61kB/s]"}},"c5566239a6e548fb99a99536ceeac56c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7f62e8dce08d400abaa3eb1c798a98a9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5bfcd9395a174a15891dd502e5747551":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e4d0d6422a4b4bc58d70ab69c1dc32c3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1b560a8855b24fcea182113b8d0534a2":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a4748fb2d83c414f904b569f0f20f355":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f1536e2e972d41238738d6ea3ec16319":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"233f8ed519e941f89861b0fb906125e5":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3e9753c008484f8aba6c7d4a7aecdfce","IPY_MODEL_4085c98a71c24a998bcc724d27165399","IPY_MODEL_578247b77fb047d68f7028095a161737"],"layout":"IPY_MODEL_9cab44dddb71433e8983a0db8581b782"}},"3e9753c008484f8aba6c7d4a7aecdfce":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_23bfe7c5eb8249a482036f3de2d7e2b7","placeholder":"​","style":"IPY_MODEL_b0250b06523849cea3e3bdfc3651b062","value":"Downloading (…)lve/main/config.json: 100%"}},"4085c98a71c24a998bcc724d27165399":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_361c36db7936429f993c51dfdc4dee3c","max":483,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5fc5eb8e96b14b749a6c496a15f4a50c","value":483}},"578247b77fb047d68f7028095a161737":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_69f30718126e48e7969dd672a7ad8530","placeholder":"​","style":"IPY_MODEL_1a5e49b3f727421a98db68ad2987b362","value":" 483/483 [00:00&lt;00:00, 35.4kB/s]"}},"9cab44dddb71433e8983a0db8581b782":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"23bfe7c5eb8249a482036f3de2d7e2b7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b0250b06523849cea3e3bdfc3651b062":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"361c36db7936429f993c51dfdc4dee3c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5fc5eb8e96b14b749a6c496a15f4a50c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"69f30718126e48e7969dd672a7ad8530":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1a5e49b3f727421a98db68ad2987b362":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ae0f19ce3ee249f7a70c707d4bc59dc3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_76ad43306f614cd2a400807fefef2cfe","IPY_MODEL_04f4e1519e6f439597a1676b81036bd3","IPY_MODEL_5b3f56873b9c4821b41d6b6de9db84ea"],"layout":"IPY_MODEL_ae9be007f6704faa9b93bd63658ef3b5"}},"76ad43306f614cd2a400807fefef2cfe":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_203a8244cfac4507b298f916183fcae3","placeholder":"​","style":"IPY_MODEL_cc859e40953e460fb5b130e0efa39289","value":"Downloading (…)solve/main/vocab.txt: 100%"}},"04f4e1519e6f439597a1676b81036bd3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ff5454951c0a48899c2616aca9284dae","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_140c173724a54f829ba05a85deadebec","value":231508}},"5b3f56873b9c4821b41d6b6de9db84ea":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d6e2bb7f370f4fc08306a4844ea583b3","placeholder":"​","style":"IPY_MODEL_23b44f8b21814864a41055577b1bc784","value":" 232k/232k [00:00&lt;00:00, 11.4MB/s]"}},"ae9be007f6704faa9b93bd63658ef3b5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"203a8244cfac4507b298f916183fcae3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cc859e40953e460fb5b130e0efa39289":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ff5454951c0a48899c2616aca9284dae":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"140c173724a54f829ba05a85deadebec":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d6e2bb7f370f4fc08306a4844ea583b3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"23b44f8b21814864a41055577b1bc784":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"38d04d6cbed34753b55f51c372952af6":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_88d04164f11c4b9fbfe19e20ee5b85f9","IPY_MODEL_7a8f25edec02493a9b7ae8b3c4fc51d0","IPY_MODEL_964faa98e9d348c49beae71342891da8"],"layout":"IPY_MODEL_457bf58ac674481fad5922c6932fccdf"}},"88d04164f11c4b9fbfe19e20ee5b85f9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0fa8f3b65fe6488e91c7da9a9d0d8533","placeholder":"​","style":"IPY_MODEL_7b18418a1dfe492c8bf73b5810e672e1","value":"Downloading (…)/main/tokenizer.json: 100%"}},"7a8f25edec02493a9b7ae8b3c4fc51d0":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9a3b64ac1e494d9488bfd13fbb580038","max":466062,"min":0,"orientation":"horizontal","style":"IPY_MODEL_4e962af9dad74a1eadfc5906a7a0293e","value":466062}},"964faa98e9d348c49beae71342891da8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_270bbb346a9d4db8a30ed9a894064454","placeholder":"​","style":"IPY_MODEL_327c07f30f0f4952adfdd0b90385889b","value":" 466k/466k [00:00&lt;00:00, 9.57MB/s]"}},"457bf58ac674481fad5922c6932fccdf":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0fa8f3b65fe6488e91c7da9a9d0d8533":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7b18418a1dfe492c8bf73b5810e672e1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9a3b64ac1e494d9488bfd13fbb580038":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4e962af9dad74a1eadfc5906a7a0293e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"270bbb346a9d4db8a30ed9a894064454":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"327c07f30f0f4952adfdd0b90385889b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}